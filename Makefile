# Makefile.in generated by automake 1.14.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.








am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/neard
pkglibdir = $(libdir)/neard
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-uclibc
host_triplet = mipsel-openwrt-linux-uclibc
bin_PROGRAMS = $(am__EXEEXT_1)
pkglibexec_PROGRAMS = src/neard$(EXEEXT) $(am__EXEEXT_3)
#am__append_1 = se/seeld
#am__append_2 = se/builtin.h
#am__append_3 = tools/nfctool/nfctool
#noinst_PROGRAMS = tools/snep-send$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_2)
TESTS = $(am__EXEEXT_2)
DIST_COMMON = $(srcdir)/Makefile.plugins $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(srcdir)/config.h.in \
	$(top_srcdir)/include/version.h.in $(srcdir)/neard.pc.in \
	depcomp $(dist_man_MANS) $(dist_dbus_DATA) $(dist_noinst_DATA) \
	$(noinst_HEADERS) $(pkginclude_HEADERS) test-driver AUTHORS \
	COPYING ChangeLog INSTALL NEWS README TODO compile \
	config.guess config.sub install-sh missing ltmain.sh
am__append_4 = nfctype1
am__append_5 = plugins/nfctype1.c
am__append_6 = nfctype2
am__append_7 = plugins/nfctype2.c plugins/mifare.c
am__append_8 = nfctype3
am__append_9 = plugins/nfctype3.c
am__append_10 = nfctype4
am__append_11 = plugins/nfctype4.c
am__append_12 = nfctype5
am__append_13 = plugins/nfctype5.c
am__append_14 = p2p
am__append_15 = plugins/p2p.c plugins/npp.c \
				plugins/snep.c \
				plugins/snep-validation.c \
				plugins/llcp-validation.c \
				plugins/handover.c plugins/p2p.h \
				plugins/phdc.c

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = include/version.h neard.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(se_plugindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkglibexecdir)" \
	"$(DESTDIR)$(testdir)" "$(DESTDIR)$(man1dir)" \
	"$(DESTDIR)$(man5dir)" "$(DESTDIR)$(man8dir)" \
	"$(DESTDIR)$(dbusdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(systemdsystemunitdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(plugin_LTLIBRARIES) $(se_plugin_LTLIBRARIES)
#am__EXEEXT_1 = tools/nfctool/nfctool$(EXEEXT)
am__EXEEXT_2 = unit/test-ndef-parse$(EXEEXT) \
	unit/test-ndef-build$(EXEEXT) unit/test-snep-read$(EXEEXT)
#am__EXEEXT_3 = se/seeld$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS) $(pkglibexec_PROGRAMS)
am__se_seeld_SOURCES_DIST = gdbus/gdbus.h gdbus/mainloop.c \
	gdbus/watch.c gdbus/object.c gdbus/client.c gdbus/polkit.c \
	se/plugins/nfc.c src/log.c src/dbus.c src/error.c src/plugin.c \
	se/main.c se/seel.h se/manager.c se/manager.h se/se.c \
	se/driver.c se/driver.h se/apdu.c se/channel.c se/ace.c
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = gdbus/se_seeld-mainloop.$(OBJEXT) \
	gdbus/se_seeld-watch.$(OBJEXT) gdbus/se_seeld-object.$(OBJEXT) \
	gdbus/se_seeld-client.$(OBJEXT) \
	gdbus/se_seeld-polkit.$(OBJEXT)
#am__objects_2 = se/plugins/se_seeld-nfc.$(OBJEXT)
#am_se_seeld_OBJECTS = $(am__objects_1) $(am__objects_2) \
#	src/se_seeld-log.$(OBJEXT) \
#	src/se_seeld-dbus.$(OBJEXT) \
#	src/se_seeld-error.$(OBJEXT) \
#	src/se_seeld-plugin.$(OBJEXT) \
#	se/se_seeld-main.$(OBJEXT) \
#	se/se_seeld-manager.$(OBJEXT) \
#	se/se_seeld-se.$(OBJEXT) se/se_seeld-driver.$(OBJEXT) \
#	se/se_seeld-apdu.$(OBJEXT) \
#	se/se_seeld-channel.$(OBJEXT) \
#	se/se_seeld-ace.$(OBJEXT)
se_seeld_OBJECTS = $(am_se_seeld_OBJECTS)
am__DEPENDENCIES_1 =
#se_seeld_DEPENDENCIES = $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
se_seeld_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(se_seeld_LDFLAGS) $(LDFLAGS) -o $@
am__src_neard_SOURCES_DIST = gdbus/gdbus.h gdbus/mainloop.c \
	gdbus/watch.c gdbus/object.c gdbus/client.c gdbus/polkit.c \
	plugins/nfctype1.c plugins/nfctype2.c plugins/mifare.c \
	plugins/nfctype3.c plugins/nfctype4.c plugins/nfctype5.c \
	plugins/p2p.c plugins/npp.c plugins/snep.c \
	plugins/snep-validation.c plugins/llcp-validation.c \
	plugins/handover.c plugins/p2p.h plugins/phdc.c src/main.c \
	src/error.c src/near.h src/log.c src/dbus.c src/manager.c \
	src/adapter.c src/device.c src/tag.c src/plugin.c \
	src/netlink.c src/ndef.c src/tlv.c src/bluetooth.c src/agent.c \
	src/snep.c
am__objects_3 = gdbus/src_neard-mainloop.$(OBJEXT) \
	gdbus/src_neard-watch.$(OBJEXT) \
	gdbus/src_neard-object.$(OBJEXT) \
	gdbus/src_neard-client.$(OBJEXT) \
	gdbus/src_neard-polkit.$(OBJEXT)
am__objects_4 = plugins/src_neard-nfctype1.$(OBJEXT)
am__objects_5 = plugins/src_neard-nfctype2.$(OBJEXT) \
	plugins/src_neard-mifare.$(OBJEXT)
am__objects_6 = plugins/src_neard-nfctype3.$(OBJEXT)
am__objects_7 = plugins/src_neard-nfctype4.$(OBJEXT)
am__objects_8 = plugins/src_neard-nfctype5.$(OBJEXT)
am__objects_9 = plugins/src_neard-p2p.$(OBJEXT) \
	plugins/src_neard-npp.$(OBJEXT) \
	plugins/src_neard-snep.$(OBJEXT) \
	plugins/src_neard-snep-validation.$(OBJEXT) \
	plugins/src_neard-llcp-validation.$(OBJEXT) \
	plugins/src_neard-handover.$(OBJEXT) \
	plugins/src_neard-phdc.$(OBJEXT)
am__objects_10 = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_9)
am_src_neard_OBJECTS = $(am__objects_3) $(am__objects_10) \
	src/src_neard-main.$(OBJEXT) src/src_neard-error.$(OBJEXT) \
	src/src_neard-log.$(OBJEXT) src/src_neard-dbus.$(OBJEXT) \
	src/src_neard-manager.$(OBJEXT) \
	src/src_neard-adapter.$(OBJEXT) src/src_neard-device.$(OBJEXT) \
	src/src_neard-tag.$(OBJEXT) src/src_neard-plugin.$(OBJEXT) \
	src/src_neard-netlink.$(OBJEXT) src/src_neard-ndef.$(OBJEXT) \
	src/src_neard-tlv.$(OBJEXT) src/src_neard-bluetooth.$(OBJEXT) \
	src/src_neard-agent.$(OBJEXT) src/src_neard-snep.$(OBJEXT)
src_neard_OBJECTS = $(am_src_neard_OBJECTS)
src_neard_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(src_neard_CFLAGS) \
	$(CFLAGS) $(src_neard_LDFLAGS) $(LDFLAGS) -o $@
am__tools_nfctool_nfctool_SOURCES_DIST = tools/nfctool/main.c \
	tools/nfctool/nfctool.h tools/nfctool/adapter.h \
	tools/nfctool/adapter.c tools/nfctool/netlink.h \
	tools/nfctool/netlink.c tools/nfctool/sniffer.h \
	tools/nfctool/sniffer.c tools/nfctool/llcp-decode.h \
	tools/nfctool/llcp-decode.c tools/nfctool/snep-decode.h \
	tools/nfctool/snep-decode.c tools/nfctool/ndef-decode.h \
	tools/nfctool/ndef-decode.c tools/nfctool/display.h \
	tools/nfctool/display.c
#am_tools_nfctool_nfctool_OBJECTS = tools/nfctool/tools_nfctool_nfctool-main.$(OBJEXT) \
#	tools/nfctool/tools_nfctool_nfctool-adapter.$(OBJEXT) \
#	tools/nfctool/tools_nfctool_nfctool-netlink.$(OBJEXT) \
#	tools/nfctool/tools_nfctool_nfctool-sniffer.$(OBJEXT) \
#	tools/nfctool/tools_nfctool_nfctool-llcp-decode.$(OBJEXT) \
#	tools/nfctool/tools_nfctool_nfctool-snep-decode.$(OBJEXT) \
#	tools/nfctool/tools_nfctool_nfctool-ndef-decode.$(OBJEXT) \
#	tools/nfctool/tools_nfctool_nfctool-display.$(OBJEXT)
tools_nfctool_nfctool_OBJECTS = $(am_tools_nfctool_nfctool_OBJECTS)
#tools_nfctool_nfctool_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__tools_snep_send_SOURCES_DIST = gdbus/gdbus.h gdbus/mainloop.c \
	gdbus/watch.c gdbus/object.c gdbus/client.c gdbus/polkit.c \
	src/log.c src/dbus.c src/bluetooth.c src/ndef.c \
	tools/snep-send.c src/error.c src/agent.c
am__objects_11 = gdbus/mainloop.$(OBJEXT) gdbus/watch.$(OBJEXT) \
	gdbus/object.$(OBJEXT) gdbus/client.$(OBJEXT) \
	gdbus/polkit.$(OBJEXT)
#am_tools_snep_send_OBJECTS = $(am__objects_11) \
#	src/log.$(OBJEXT) src/dbus.$(OBJEXT) \
#	src/bluetooth.$(OBJEXT) src/ndef.$(OBJEXT) \
#	tools/snep-send.$(OBJEXT) src/error.$(OBJEXT) \
#	src/agent.$(OBJEXT)
tools_snep_send_OBJECTS = $(am_tools_snep_send_OBJECTS)
#tools_snep_send_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am_unit_test_ndef_build_OBJECTS = $(am__objects_11) src/log.$(OBJEXT) \
	src/dbus.$(OBJEXT) src/error.$(OBJEXT) src/agent.$(OBJEXT) \
	src/bluetooth.$(OBJEXT) src/ndef.$(OBJEXT) \
	unit/test-ndef-build.$(OBJEXT)
unit_test_ndef_build_OBJECTS = $(am_unit_test_ndef_build_OBJECTS)
unit_test_ndef_build_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_unit_test_ndef_parse_OBJECTS = $(am__objects_11) src/log.$(OBJEXT) \
	src/dbus.$(OBJEXT) src/error.$(OBJEXT) src/agent.$(OBJEXT) \
	src/bluetooth.$(OBJEXT) src/ndef.$(OBJEXT) \
	unit/test-ndef-parse.$(OBJEXT)
unit_test_ndef_parse_OBJECTS = $(am_unit_test_ndef_parse_OBJECTS)
unit_test_ndef_parse_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_unit_test_snep_read_OBJECTS = $(am__objects_11) src/log.$(OBJEXT) \
	src/dbus.$(OBJEXT) src/error.$(OBJEXT) src/agent.$(OBJEXT) \
	src/bluetooth.$(OBJEXT) src/ndef.$(OBJEXT) src/snep.$(OBJEXT) \
	unit/test-snep-read.$(OBJEXT) unit/test-utils.$(OBJEXT)
unit_test_snep_read_OBJECTS = $(am_unit_test_snep_read_OBJECTS)
unit_test_snep_read_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
SCRIPTS = $(test_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(se_seeld_SOURCES) $(src_neard_SOURCES) \
	$(tools_nfctool_nfctool_SOURCES) $(tools_snep_send_SOURCES) \
	$(unit_test_ndef_build_SOURCES) \
	$(unit_test_ndef_parse_SOURCES) $(unit_test_snep_read_SOURCES)
DIST_SOURCES = $(am__se_seeld_SOURCES_DIST) \
	$(am__src_neard_SOURCES_DIST) \
	$(am__tools_nfctool_nfctool_SOURCES_DIST) \
	$(am__tools_snep_send_SOURCES_DIST) \
	$(unit_test_ndef_build_SOURCES) \
	$(unit_test_ndef_parse_SOURCES) $(unit_test_snep_read_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
man5dir = $(mandir)/man5
man8dir = $(mandir)/man8
NROFF = nroff
MANS = $(dist_man_MANS)
DATA = $(dist_dbus_DATA) $(dist_noinst_DATA) $(pkgconfig_DATA) \
	$(systemdsystemunit_DATA)
HEADERS = $(nodist_include_HEADERS) $(noinst_HEADERS) \
	$(pkginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
pkgincludedir = ${includedir}/near
pkglibexecdir = ${libexecdir}/nfc
ACLOCAL = ${SHELL} /home/sheen/trunk/neard/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = mipsel-openwrt-linux-uclibc-ar
AUTOCONF = ${SHELL} /home/sheen/trunk/neard/missing autoconf
AUTOHEADER = ${SHELL} /home/sheen/trunk/neard/missing autoheader
AUTOMAKE = ${SHELL} /home/sheen/trunk/neard/missing automake-1.14
AWK = gawk
CC = mipsel-openwrt-linux-uclibc-gcc-4.8.3
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -O2 -D_FORTIFY_SOURCE=2 -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -Wdeclaration-after-statement -Wmissing-declarations -Wredundant-decls -Wcast-align -DG_DISABLE_DEPRECATED -g
CPP = mipsel-openwrt-linux-uclibc-gcc-4.8.3 -E
CPPFLAGS = 
CYGPATH_W = echo
DBUS_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include  
DBUS_DEPS = dbus-1 >= 1.2
DBUS_LIBS = -ldbus-1  
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  
GLIB_DEPS = glib-2.0 >= 2.28
GLIB_LIBS = -lglib-2.0  
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = mipsel-openwrt-linux-uclibc-ld
LDFLAGS = -L/home/sheen/trunk/OpenWrt-SDK-ramips-mt7620_gcc-4.8-linaro_uClibc-0.9.33.2.Linux-x86_64/staging_dir/target-mipsel_24kec+dsp_uClibc-0.9.33.2/usr/lib
LIBNL1_CFLAGS = 
LIBNL1_LIBS = 
LIBNL2_CFLAGS = 
LIBNL2_LIBS = 
LIBNL3_CFLAGS = -I/usr/include/libnl3  
LIBNL3_LIBS = -lnl-genl-3 -lnl-3  
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/sheen/trunk/neard/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NETLINK_CFLAGS = -I/usr/include/libnl3  
NETLINK_DEPS = libnl-3.0 libnl-genl-3.0
NETLINK_LIBS = -lnl-genl-3 -lnl-3  
NM = /home/sheen/trunk/staging_dir/toolchain-mipsel_24kec+dsp_gcc-4.8-linaro_uClibc-0.9.33.2/bin/mipsel-openwrt-linux-uclibc-nm -B
NMEDIT = 
OBJDUMP = mipsel-openwrt-linux-uclibc-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = neard
PACKAGE_BUGREPORT = linux-nfc@lists.01.org
PACKAGE_NAME = neard
PACKAGE_STRING = neard 0.15
PACKAGE_TARNAME = neard
PACKAGE_URL = 
PACKAGE_VERSION = 0.15
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = mipsel-openwrt-uclibc-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = mipsel-openwrt-linux-uclibc-strip
SYSTEMD_SYSTEMUNITDIR = 
SYSTEMD_USERUNITDIR = 
VERSION = 0.15
abs_builddir = /home/sheen/trunk/neard
abs_srcdir = /home/sheen/trunk/neard
abs_top_builddir = /home/sheen/trunk/neard
abs_top_srcdir = /home/sheen/trunk/neard
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-uclibc
build_alias = 
build_cpu = x86_64
build_os = linux-uclibc
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /home/sheen/nfc/usr
host = mipsel-openwrt-linux-uclibc
host_alias = mipsel-openwrt-linux-uclibc
host_cpu = mipsel
host_os = linux-uclibc
host_vendor = openwrt
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/sheen/trunk/neard/install-sh
libdir = ${prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
plugindir = ${pkglibdir}/plugins
prefix = /home/sheen/nfc/usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
se_plugindir = ${pkglibdir}/plugins-se
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /home/sheen/nfc/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
ACLOCAL_AMFLAGS = -I m4
AM_MAKEFLAGS = --no-print-directory
pkginclude_HEADERS = include/types.h include/log.h include/plugin.h \
			include/tag.h include/adapter.h include/ndef.h \
			include/tlv.h include/setting.h include/device.h \
			include/nfc_copy.h include/snep.h

nodist_include_HEADERS = include/version.h
noinst_HEADERS = include/dbus.h
local_headers = $(foreach file,$(pkginclude_HEADERS) $(nodist_include_HEADERS) \
			$(noinst_HEADERS), include/near/$(notdir $(file)))

gdbus_sources = gdbus/gdbus.h gdbus/mainloop.c gdbus/watch.c \
				gdbus/object.c gdbus/client.c gdbus/polkit.c

plugin_LTLIBRARIES = 
plugin_objects = 
unit_objects = 
builtin_modules = $(am__append_4) $(am__append_6) $(am__append_8) \
	$(am__append_10) $(am__append_12) $(am__append_14)
builtin_sources = $(am__append_5) $(am__append_7) $(am__append_9) \
	$(am__append_11) $(am__append_13) $(am__append_15)
builtin_cflags = 
builtin_libadd = 
src_neard_SOURCES = $(gdbus_sources) $(gweb_sources) $(builtin_sources) \
			src/main.c src/error.c src/near.h src/log.c \
			src/dbus.c src/manager.c src/adapter.c src/device.c \
			src/tag.c src/plugin.c src/netlink.c src/ndef.c \
			src/tlv.c src/bluetooth.c src/agent.c src/snep.c

src_neard_LDADD = $(builtin_libadd) ${GLIB_LIBS} ${DBUS_LIBS} ${NETLINK_LIBS} -ldl
src_neard_LDFLAGS = -Wl,--export-dynamic
src_neard_DEPENDENCIES = src/neard.service
BUILT_SOURCES = src/builtin.h $(am__append_2)
AM_CPPFLAGS = ${GLIB_CFLAGS} ${DBUS_CFLAGS} ${NETLINK_CFLAGS} \
		-DNEAR_PLUGIN_BUILTIN -DPLUGINDIR=\""$(plugindir)"\" \
		-DCONFIGDIR=\""$(configdir)\"" \
		-I$(builddir)/include -I$(builddir)/src -I$(srcdir)/gdbus

AM_CFLAGS = ${builtin_cflags} -I$(builddir)/include -I$(builddir)/src -I$(srcdir)/gdbus
#se_plugin_LTLIBRARIES = 
#se_plugin_objects = 
#builtin_se_modules = nfc
#builtin_se_sources = se/plugins/nfc.c
#builtin_se_libadd = -lnl-genl-3 -lnl-3  
#builtin_se_cflags = -I/usr/include/libnl3  
#se_seeld_SOURCES = $(gdbus_sources) $(builtin_se_sources) \
#			src/log.c src/dbus.c src/error.c src/plugin.c \
#			se/main.c se/seel.h se/manager.c se/manager.h \
#			se/se.c se/driver.c se/driver.h se/apdu.c \
#			se/channel.c se/ace.c

#se_seeld_LDADD = $(builtin_se_libadd) -lglib-2.0   -ldbus-1   -ldl
#se_seeld_LDFLAGS = -Wl,--export-dynamic
src_neard_CFLAGS = ${builtin_cflags} -I$(builddir)/include -I$(builddir)/src -I$(srcdir)/gdbus
src_neard_CPPFLAGS = ${GLIB_CFLAGS} ${DBUS_CFLAGS} ${NETLINK_CFLAGS} \
			-DNEAR_PLUGIN_BUILTIN \
			-DPLUGINDIR=\""$(plugindir)"\" \
			-DCONFIGDIR=\""$(configdir)\"" \
			-I$(builddir)/include -I$(builddir)/src -I$(srcdir)/gdbus

#src_seeld_CFLAGS = ${builtin_se_cflags} -I$(builddir)/include -I$(builddir)/src -I$(srcdir)/gdbus
#se_seeld_CPPFLAGS = ${GLIB_CFLAGS} ${DBUS_CFLAGS} ${NETLINK_CFLAGS} \
#					-DNEAR_PLUGIN_BUILTIN \
#					-DPLUGINDIR=\""$(build_se_plugindir)"\" \
#					-DCONFIGDIR=\""$(configdir)\"" \
#					-I$(builddir)/se

CLEANFILES = src/builtin.h se/builtin.h $(local_headers) \
	src/neard.service
configdir = ${sysconfdir}/neard
dist_noinst_DATA = src/main.conf
dbusdir = ${sysconfdir}/dbus-1/system.d/
dist_dbus_DATA = src/org.neard.conf
##build_se_plugindir = $(se_plugindir)
#build_se_plugindir = $(abs_top_srcdir)/se/plugins/.libs
#build_plugindir = $(plugindir)
build_plugindir = $(abs_top_srcdir)/plugins/.libs
doc_files = doc/tag-api.txt doc/device-api.txt doc/adapter-api.txt \
		doc/agent-api.txt doc/phdc-api.txt \
		doc/secureelement-api.txt doc/se-manager-api.txt

EXTRA_DIST = src/genbuiltin $(doc_files) src/neard.service.in \
	$(test_scripts)
dist_man_MANS = doc/neard.8 doc/neard.conf.5 doc/nfctool.1
test_scripts = test/test-adapter test/test-device \
		test/test-tag test/monitor-near test/bt-handover \
		test/handover-agent test/phdc-simple-manager \
		test/neardutils.py

#systemdsystemunitdir = ${SYSTEMD_SYSTEMUNITDIR}
#systemdsystemunit_DATA = src/neard.service
#testdir = $(pkglibdir)/test
#test_SCRIPTS = $(test_scripts)
#tools_snep_send_SOURCES = $(gdbus_sources) src/log.c src/dbus.c \
#					src/bluetooth.c src/ndef.c \
#					tools/snep-send.c src/error.c \
#					src/agent.c

#tools_snep_send_LDADD = ${GLIB_LIBS} ${DBUS_LIBS}
#tools_nfctool_nfctool_SOURCES = tools/nfctool/main.c \
#					tools/nfctool/nfctool.h \
#					tools/nfctool/adapter.h \
#					tools/nfctool/adapter.c \
#					tools/nfctool/netlink.h \
#					tools/nfctool/netlink.c \
#					tools/nfctool/sniffer.h \
#					tools/nfctool/sniffer.c \
#					tools/nfctool/llcp-decode.h \
#					tools/nfctool/llcp-decode.c \
#					tools/nfctool/snep-decode.h \
#					tools/nfctool/snep-decode.c \
#					tools/nfctool/ndef-decode.h \
#					tools/nfctool/ndef-decode.c \
#					tools/nfctool/display.h \
#					tools/nfctool/display.c

#tools_nfctool_nfctool_LDADD = ${GLIB_LIBS} ${NETLINK_LIBS}
tools_nfctool_nfctool_CPPFLAGS = ${GLIB_CFLAGS} ${DBUS_CFLAGS} ${NETLINK_CFLAGS} \
			-DNEAR_PLUGIN_BUILTIN \
			-DPLUGINDIR=\""$(plugindir)"\" \
			-DCONFIGDIR=\""$(configdir)\"" \
			-I$(builddir)/include -I$(builddir)/src -I$(srcdir)/gdbus

unit_tests = unit/test-ndef-parse unit/test-ndef-build unit/test-snep-read
unit_test_ndef_parse_SOURCES = $(gdbus_sources) src/log.c src/dbus.c \
					src/error.c src/agent.c \
					src/bluetooth.c src/ndef.c \
					unit/test-ndef-parse.c

unit_test_ndef_parse_LDADD = ${GLIB_LIBS} ${DBUS_LIBS}
unit_test_ndef_build_SOURCES = $(gdbus_sources) src/log.c src/dbus.c \
					src/error.c src/agent.c \
					src/bluetooth.c src/ndef.c \
					unit/test-ndef-build.c

unit_test_ndef_build_LDADD = ${GLIB_LIBS} ${DBUS_LIBS}
unit_test_snep_read_SOURCES = $(gdbus_sources) src/log.c src/dbus.c \
					src/error.c src/agent.c \
					src/bluetooth.c src/ndef.c src/snep.c \
					unit/test-snep-read.c unit/test-utils.c \
					unit/test-utils.h

unit_test_snep_read_LDADD = ${GLIB_LIBS} ${DBUS_LIBS}
plugin_cflags = -fvisibility=hidden -I$(srcdir)/gdbus \
					-I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include   -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  

plugin_ldflags = -no-undefined -module -avoid-version
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = neard.pc
DISTCHECK_CONFIGURE_FLAGS = --enable-tools --enable-ese --disable-systemd
DISTCLEANFILES = $(pkgconfig_DATA)
MAINTAINERCLEANFILES = Makefile.in \
	aclocal.m4 configure config.h.in config.sub config.guess \
	ltmain.sh depcomp compile missing install-sh mkinstalldirs

SED_PROCESS = $(AM_V_GEN)$(MKDIR_P) $(dir $@) && \
		$(SED) -e 's,@pkglibexecdir\@,$(pkglibexecdir),g' \
		< $< > $@

all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.plugins $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.plugins:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
include/version.h: $(top_builddir)/config.status $(top_srcdir)/include/version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
neard.pc: $(top_builddir)/config.status $(srcdir)/neard.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(plugindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(plugindir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(plugindir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(plugindir)"; \
	}

uninstall-pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(plugindir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(plugindir)/$$f"; \
	done

clean-pluginLTLIBRARIES:
	-test -z "$(plugin_LTLIBRARIES)" || rm -f $(plugin_LTLIBRARIES)
	@list='$(plugin_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-se_pluginLTLIBRARIES: $(se_plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(se_plugin_LTLIBRARIES)'; test -n "$(se_plugindir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(se_plugindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(se_plugindir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(se_plugindir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(se_plugindir)"; \
	}

uninstall-se_pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(se_plugin_LTLIBRARIES)'; test -n "$(se_plugindir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(se_plugindir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(se_plugindir)/$$f"; \
	done

clean-se_pluginLTLIBRARIES:
	-test -z "$(se_plugin_LTLIBRARIES)" || rm -f $(se_plugin_LTLIBRARIES)
	@list='$(se_plugin_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-pkglibexecPROGRAMS: $(pkglibexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(pkglibexec_PROGRAMS)'; test -n "$(pkglibexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(pkglibexecdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(pkglibexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-pkglibexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglibexec_PROGRAMS)'; test -n "$(pkglibexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkglibexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkglibexecdir)" && rm -f $$files

clean-pkglibexecPROGRAMS:
	@list='$(pkglibexec_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
gdbus/$(am__dirstamp):
	@$(MKDIR_P) gdbus
	@: > gdbus/$(am__dirstamp)
gdbus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gdbus/$(DEPDIR)
	@: > gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/se_seeld-mainloop.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/se_seeld-watch.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/se_seeld-object.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/se_seeld-client.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/se_seeld-polkit.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
se/plugins/$(am__dirstamp):
	@$(MKDIR_P) se/plugins
	@: > se/plugins/$(am__dirstamp)
se/plugins/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) se/plugins/$(DEPDIR)
	@: > se/plugins/$(DEPDIR)/$(am__dirstamp)
se/plugins/se_seeld-nfc.$(OBJEXT): se/plugins/$(am__dirstamp) \
	se/plugins/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/se_seeld-log.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/se_seeld-dbus.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/se_seeld-error.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/se_seeld-plugin.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
se/$(am__dirstamp):
	@$(MKDIR_P) se
	@: > se/$(am__dirstamp)
se/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) se/$(DEPDIR)
	@: > se/$(DEPDIR)/$(am__dirstamp)
se/se_seeld-main.$(OBJEXT): se/$(am__dirstamp) \
	se/$(DEPDIR)/$(am__dirstamp)
se/se_seeld-manager.$(OBJEXT): se/$(am__dirstamp) \
	se/$(DEPDIR)/$(am__dirstamp)
se/se_seeld-se.$(OBJEXT): se/$(am__dirstamp) \
	se/$(DEPDIR)/$(am__dirstamp)
se/se_seeld-driver.$(OBJEXT): se/$(am__dirstamp) \
	se/$(DEPDIR)/$(am__dirstamp)
se/se_seeld-apdu.$(OBJEXT): se/$(am__dirstamp) \
	se/$(DEPDIR)/$(am__dirstamp)
se/se_seeld-channel.$(OBJEXT): se/$(am__dirstamp) \
	se/$(DEPDIR)/$(am__dirstamp)
se/se_seeld-ace.$(OBJEXT): se/$(am__dirstamp) \
	se/$(DEPDIR)/$(am__dirstamp)

se/seeld$(EXEEXT): $(se_seeld_OBJECTS) $(se_seeld_DEPENDENCIES) $(EXTRA_se_seeld_DEPENDENCIES) se/$(am__dirstamp)
	@rm -f se/seeld$(EXEEXT)
	$(AM_V_CCLD)$(se_seeld_LINK) $(se_seeld_OBJECTS) $(se_seeld_LDADD) $(LIBS)
gdbus/src_neard-mainloop.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/src_neard-watch.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/src_neard-object.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/src_neard-client.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/src_neard-polkit.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
plugins/$(am__dirstamp):
	@$(MKDIR_P) plugins
	@: > plugins/$(am__dirstamp)
plugins/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) plugins/$(DEPDIR)
	@: > plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-nfctype1.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-nfctype2.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-mifare.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-nfctype3.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-nfctype4.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-nfctype5.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-p2p.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-npp.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-snep.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-snep-validation.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-llcp-validation.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-handover.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
plugins/src_neard-phdc.$(OBJEXT): plugins/$(am__dirstamp) \
	plugins/$(DEPDIR)/$(am__dirstamp)
src/src_neard-main.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-error.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-log.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-dbus.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-manager.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-adapter.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-device.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-tag.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-plugin.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-netlink.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-ndef.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-tlv.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-bluetooth.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-agent.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/src_neard-snep.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

src/neard$(EXEEXT): $(src_neard_OBJECTS) $(src_neard_DEPENDENCIES) $(EXTRA_src_neard_DEPENDENCIES) src/$(am__dirstamp)
	@rm -f src/neard$(EXEEXT)
	$(AM_V_CCLD)$(src_neard_LINK) $(src_neard_OBJECTS) $(src_neard_LDADD) $(LIBS)
tools/nfctool/$(am__dirstamp):
	@$(MKDIR_P) tools/nfctool
	@: > tools/nfctool/$(am__dirstamp)
tools/nfctool/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tools/nfctool/$(DEPDIR)
	@: > tools/nfctool/$(DEPDIR)/$(am__dirstamp)
tools/nfctool/tools_nfctool_nfctool-main.$(OBJEXT):  \
	tools/nfctool/$(am__dirstamp) \
	tools/nfctool/$(DEPDIR)/$(am__dirstamp)
tools/nfctool/tools_nfctool_nfctool-adapter.$(OBJEXT):  \
	tools/nfctool/$(am__dirstamp) \
	tools/nfctool/$(DEPDIR)/$(am__dirstamp)
tools/nfctool/tools_nfctool_nfctool-netlink.$(OBJEXT):  \
	tools/nfctool/$(am__dirstamp) \
	tools/nfctool/$(DEPDIR)/$(am__dirstamp)
tools/nfctool/tools_nfctool_nfctool-sniffer.$(OBJEXT):  \
	tools/nfctool/$(am__dirstamp) \
	tools/nfctool/$(DEPDIR)/$(am__dirstamp)
tools/nfctool/tools_nfctool_nfctool-llcp-decode.$(OBJEXT):  \
	tools/nfctool/$(am__dirstamp) \
	tools/nfctool/$(DEPDIR)/$(am__dirstamp)
tools/nfctool/tools_nfctool_nfctool-snep-decode.$(OBJEXT):  \
	tools/nfctool/$(am__dirstamp) \
	tools/nfctool/$(DEPDIR)/$(am__dirstamp)
tools/nfctool/tools_nfctool_nfctool-ndef-decode.$(OBJEXT):  \
	tools/nfctool/$(am__dirstamp) \
	tools/nfctool/$(DEPDIR)/$(am__dirstamp)
tools/nfctool/tools_nfctool_nfctool-display.$(OBJEXT):  \
	tools/nfctool/$(am__dirstamp) \
	tools/nfctool/$(DEPDIR)/$(am__dirstamp)

tools/nfctool/nfctool$(EXEEXT): $(tools_nfctool_nfctool_OBJECTS) $(tools_nfctool_nfctool_DEPENDENCIES) $(EXTRA_tools_nfctool_nfctool_DEPENDENCIES) tools/nfctool/$(am__dirstamp)
	@rm -f tools/nfctool/nfctool$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tools_nfctool_nfctool_OBJECTS) $(tools_nfctool_nfctool_LDADD) $(LIBS)
gdbus/mainloop.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/watch.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/object.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/client.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
gdbus/polkit.$(OBJEXT): gdbus/$(am__dirstamp) \
	gdbus/$(DEPDIR)/$(am__dirstamp)
src/log.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/dbus.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/bluetooth.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ndef.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
tools/$(am__dirstamp):
	@$(MKDIR_P) tools
	@: > tools/$(am__dirstamp)
tools/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tools/$(DEPDIR)
	@: > tools/$(DEPDIR)/$(am__dirstamp)
tools/snep-send.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)
src/error.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/agent.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)

tools/snep-send$(EXEEXT): $(tools_snep_send_OBJECTS) $(tools_snep_send_DEPENDENCIES) $(EXTRA_tools_snep_send_DEPENDENCIES) tools/$(am__dirstamp)
	@rm -f tools/snep-send$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tools_snep_send_OBJECTS) $(tools_snep_send_LDADD) $(LIBS)
unit/$(am__dirstamp):
	@$(MKDIR_P) unit
	@: > unit/$(am__dirstamp)
unit/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) unit/$(DEPDIR)
	@: > unit/$(DEPDIR)/$(am__dirstamp)
unit/test-ndef-build.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-ndef-build$(EXEEXT): $(unit_test_ndef_build_OBJECTS) $(unit_test_ndef_build_DEPENDENCIES) $(EXTRA_unit_test_ndef_build_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-ndef-build$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_ndef_build_OBJECTS) $(unit_test_ndef_build_LDADD) $(LIBS)
unit/test-ndef-parse.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-ndef-parse$(EXEEXT): $(unit_test_ndef_parse_OBJECTS) $(unit_test_ndef_parse_DEPENDENCIES) $(EXTRA_unit_test_ndef_parse_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-ndef-parse$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_ndef_parse_OBJECTS) $(unit_test_ndef_parse_LDADD) $(LIBS)
src/snep.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
unit/test-snep-read.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)
unit/test-utils.$(OBJEXT): unit/$(am__dirstamp) \
	unit/$(DEPDIR)/$(am__dirstamp)

unit/test-snep-read$(EXEEXT): $(unit_test_snep_read_OBJECTS) $(unit_test_snep_read_DEPENDENCIES) $(EXTRA_unit_test_snep_read_DEPENDENCIES) unit/$(am__dirstamp)
	@rm -f unit/test-snep-read$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_test_snep_read_OBJECTS) $(unit_test_snep_read_LDADD) $(LIBS)
install-testSCRIPTS: $(test_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(test_SCRIPTS)'; test -n "$(testdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(testdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(testdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(testdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(testdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-testSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(test_SCRIPTS)'; test -n "$(testdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(testdir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f gdbus/*.$(OBJEXT)
	-rm -f plugins/*.$(OBJEXT)
	-rm -f se/*.$(OBJEXT)
	-rm -f se/plugins/*.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f tools/*.$(OBJEXT)
	-rm -f tools/nfctool/*.$(OBJEXT)
	-rm -f unit/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include gdbus/$(DEPDIR)/client.Po
include gdbus/$(DEPDIR)/mainloop.Po
include gdbus/$(DEPDIR)/object.Po
include gdbus/$(DEPDIR)/polkit.Po
include gdbus/$(DEPDIR)/se_seeld-client.Po
include gdbus/$(DEPDIR)/se_seeld-mainloop.Po
include gdbus/$(DEPDIR)/se_seeld-object.Po
include gdbus/$(DEPDIR)/se_seeld-polkit.Po
include gdbus/$(DEPDIR)/se_seeld-watch.Po
include gdbus/$(DEPDIR)/src_neard-client.Po
include gdbus/$(DEPDIR)/src_neard-mainloop.Po
include gdbus/$(DEPDIR)/src_neard-object.Po
include gdbus/$(DEPDIR)/src_neard-polkit.Po
include gdbus/$(DEPDIR)/src_neard-watch.Po
include gdbus/$(DEPDIR)/watch.Po
include plugins/$(DEPDIR)/src_neard-handover.Po
include plugins/$(DEPDIR)/src_neard-llcp-validation.Po
include plugins/$(DEPDIR)/src_neard-mifare.Po
include plugins/$(DEPDIR)/src_neard-nfctype1.Po
include plugins/$(DEPDIR)/src_neard-nfctype2.Po
include plugins/$(DEPDIR)/src_neard-nfctype3.Po
include plugins/$(DEPDIR)/src_neard-nfctype4.Po
include plugins/$(DEPDIR)/src_neard-nfctype5.Po
include plugins/$(DEPDIR)/src_neard-npp.Po
include plugins/$(DEPDIR)/src_neard-p2p.Po
include plugins/$(DEPDIR)/src_neard-phdc.Po
include plugins/$(DEPDIR)/src_neard-snep-validation.Po
include plugins/$(DEPDIR)/src_neard-snep.Po
include se/$(DEPDIR)/se_seeld-ace.Po
include se/$(DEPDIR)/se_seeld-apdu.Po
include se/$(DEPDIR)/se_seeld-channel.Po
include se/$(DEPDIR)/se_seeld-driver.Po
include se/$(DEPDIR)/se_seeld-main.Po
include se/$(DEPDIR)/se_seeld-manager.Po
include se/$(DEPDIR)/se_seeld-se.Po
include se/plugins/$(DEPDIR)/se_seeld-nfc.Po
include src/$(DEPDIR)/agent.Po
include src/$(DEPDIR)/bluetooth.Po
include src/$(DEPDIR)/dbus.Po
include src/$(DEPDIR)/error.Po
include src/$(DEPDIR)/log.Po
include src/$(DEPDIR)/ndef.Po
include src/$(DEPDIR)/se_seeld-dbus.Po
include src/$(DEPDIR)/se_seeld-error.Po
include src/$(DEPDIR)/se_seeld-log.Po
include src/$(DEPDIR)/se_seeld-plugin.Po
include src/$(DEPDIR)/snep.Po
include src/$(DEPDIR)/src_neard-adapter.Po
include src/$(DEPDIR)/src_neard-agent.Po
include src/$(DEPDIR)/src_neard-bluetooth.Po
include src/$(DEPDIR)/src_neard-dbus.Po
include src/$(DEPDIR)/src_neard-device.Po
include src/$(DEPDIR)/src_neard-error.Po
include src/$(DEPDIR)/src_neard-log.Po
include src/$(DEPDIR)/src_neard-main.Po
include src/$(DEPDIR)/src_neard-manager.Po
include src/$(DEPDIR)/src_neard-ndef.Po
include src/$(DEPDIR)/src_neard-netlink.Po
include src/$(DEPDIR)/src_neard-plugin.Po
include src/$(DEPDIR)/src_neard-snep.Po
include src/$(DEPDIR)/src_neard-tag.Po
include src/$(DEPDIR)/src_neard-tlv.Po
include tools/$(DEPDIR)/snep-send.Po
include tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-adapter.Po
include tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-display.Po
include tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-llcp-decode.Po
include tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-main.Po
include tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-ndef-decode.Po
include tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-netlink.Po
include tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-snep-decode.Po
include tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-sniffer.Po
include unit/$(DEPDIR)/test-ndef-build.Po
include unit/$(DEPDIR)/test-ndef-parse.Po
include unit/$(DEPDIR)/test-snep-read.Po
include unit/$(DEPDIR)/test-utils.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

gdbus/se_seeld-mainloop.o: gdbus/mainloop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-mainloop.o -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-mainloop.Tpo -c -o gdbus/se_seeld-mainloop.o `test -f 'gdbus/mainloop.c' || echo '$(srcdir)/'`gdbus/mainloop.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-mainloop.Tpo gdbus/$(DEPDIR)/se_seeld-mainloop.Po
#	$(AM_V_CC)source='gdbus/mainloop.c' object='gdbus/se_seeld-mainloop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-mainloop.o `test -f 'gdbus/mainloop.c' || echo '$(srcdir)/'`gdbus/mainloop.c

gdbus/se_seeld-mainloop.obj: gdbus/mainloop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-mainloop.obj -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-mainloop.Tpo -c -o gdbus/se_seeld-mainloop.obj `if test -f 'gdbus/mainloop.c'; then $(CYGPATH_W) 'gdbus/mainloop.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/mainloop.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-mainloop.Tpo gdbus/$(DEPDIR)/se_seeld-mainloop.Po
#	$(AM_V_CC)source='gdbus/mainloop.c' object='gdbus/se_seeld-mainloop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-mainloop.obj `if test -f 'gdbus/mainloop.c'; then $(CYGPATH_W) 'gdbus/mainloop.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/mainloop.c'; fi`

gdbus/se_seeld-watch.o: gdbus/watch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-watch.o -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-watch.Tpo -c -o gdbus/se_seeld-watch.o `test -f 'gdbus/watch.c' || echo '$(srcdir)/'`gdbus/watch.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-watch.Tpo gdbus/$(DEPDIR)/se_seeld-watch.Po
#	$(AM_V_CC)source='gdbus/watch.c' object='gdbus/se_seeld-watch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-watch.o `test -f 'gdbus/watch.c' || echo '$(srcdir)/'`gdbus/watch.c

gdbus/se_seeld-watch.obj: gdbus/watch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-watch.obj -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-watch.Tpo -c -o gdbus/se_seeld-watch.obj `if test -f 'gdbus/watch.c'; then $(CYGPATH_W) 'gdbus/watch.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/watch.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-watch.Tpo gdbus/$(DEPDIR)/se_seeld-watch.Po
#	$(AM_V_CC)source='gdbus/watch.c' object='gdbus/se_seeld-watch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-watch.obj `if test -f 'gdbus/watch.c'; then $(CYGPATH_W) 'gdbus/watch.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/watch.c'; fi`

gdbus/se_seeld-object.o: gdbus/object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-object.o -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-object.Tpo -c -o gdbus/se_seeld-object.o `test -f 'gdbus/object.c' || echo '$(srcdir)/'`gdbus/object.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-object.Tpo gdbus/$(DEPDIR)/se_seeld-object.Po
#	$(AM_V_CC)source='gdbus/object.c' object='gdbus/se_seeld-object.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-object.o `test -f 'gdbus/object.c' || echo '$(srcdir)/'`gdbus/object.c

gdbus/se_seeld-object.obj: gdbus/object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-object.obj -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-object.Tpo -c -o gdbus/se_seeld-object.obj `if test -f 'gdbus/object.c'; then $(CYGPATH_W) 'gdbus/object.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/object.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-object.Tpo gdbus/$(DEPDIR)/se_seeld-object.Po
#	$(AM_V_CC)source='gdbus/object.c' object='gdbus/se_seeld-object.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-object.obj `if test -f 'gdbus/object.c'; then $(CYGPATH_W) 'gdbus/object.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/object.c'; fi`

gdbus/se_seeld-client.o: gdbus/client.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-client.o -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-client.Tpo -c -o gdbus/se_seeld-client.o `test -f 'gdbus/client.c' || echo '$(srcdir)/'`gdbus/client.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-client.Tpo gdbus/$(DEPDIR)/se_seeld-client.Po
#	$(AM_V_CC)source='gdbus/client.c' object='gdbus/se_seeld-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-client.o `test -f 'gdbus/client.c' || echo '$(srcdir)/'`gdbus/client.c

gdbus/se_seeld-client.obj: gdbus/client.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-client.obj -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-client.Tpo -c -o gdbus/se_seeld-client.obj `if test -f 'gdbus/client.c'; then $(CYGPATH_W) 'gdbus/client.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/client.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-client.Tpo gdbus/$(DEPDIR)/se_seeld-client.Po
#	$(AM_V_CC)source='gdbus/client.c' object='gdbus/se_seeld-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-client.obj `if test -f 'gdbus/client.c'; then $(CYGPATH_W) 'gdbus/client.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/client.c'; fi`

gdbus/se_seeld-polkit.o: gdbus/polkit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-polkit.o -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-polkit.Tpo -c -o gdbus/se_seeld-polkit.o `test -f 'gdbus/polkit.c' || echo '$(srcdir)/'`gdbus/polkit.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-polkit.Tpo gdbus/$(DEPDIR)/se_seeld-polkit.Po
#	$(AM_V_CC)source='gdbus/polkit.c' object='gdbus/se_seeld-polkit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-polkit.o `test -f 'gdbus/polkit.c' || echo '$(srcdir)/'`gdbus/polkit.c

gdbus/se_seeld-polkit.obj: gdbus/polkit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gdbus/se_seeld-polkit.obj -MD -MP -MF gdbus/$(DEPDIR)/se_seeld-polkit.Tpo -c -o gdbus/se_seeld-polkit.obj `if test -f 'gdbus/polkit.c'; then $(CYGPATH_W) 'gdbus/polkit.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/polkit.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/se_seeld-polkit.Tpo gdbus/$(DEPDIR)/se_seeld-polkit.Po
#	$(AM_V_CC)source='gdbus/polkit.c' object='gdbus/se_seeld-polkit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gdbus/se_seeld-polkit.obj `if test -f 'gdbus/polkit.c'; then $(CYGPATH_W) 'gdbus/polkit.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/polkit.c'; fi`

se/plugins/se_seeld-nfc.o: se/plugins/nfc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/plugins/se_seeld-nfc.o -MD -MP -MF se/plugins/$(DEPDIR)/se_seeld-nfc.Tpo -c -o se/plugins/se_seeld-nfc.o `test -f 'se/plugins/nfc.c' || echo '$(srcdir)/'`se/plugins/nfc.c
	$(AM_V_at)$(am__mv) se/plugins/$(DEPDIR)/se_seeld-nfc.Tpo se/plugins/$(DEPDIR)/se_seeld-nfc.Po
#	$(AM_V_CC)source='se/plugins/nfc.c' object='se/plugins/se_seeld-nfc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/plugins/se_seeld-nfc.o `test -f 'se/plugins/nfc.c' || echo '$(srcdir)/'`se/plugins/nfc.c

se/plugins/se_seeld-nfc.obj: se/plugins/nfc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/plugins/se_seeld-nfc.obj -MD -MP -MF se/plugins/$(DEPDIR)/se_seeld-nfc.Tpo -c -o se/plugins/se_seeld-nfc.obj `if test -f 'se/plugins/nfc.c'; then $(CYGPATH_W) 'se/plugins/nfc.c'; else $(CYGPATH_W) '$(srcdir)/se/plugins/nfc.c'; fi`
	$(AM_V_at)$(am__mv) se/plugins/$(DEPDIR)/se_seeld-nfc.Tpo se/plugins/$(DEPDIR)/se_seeld-nfc.Po
#	$(AM_V_CC)source='se/plugins/nfc.c' object='se/plugins/se_seeld-nfc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/plugins/se_seeld-nfc.obj `if test -f 'se/plugins/nfc.c'; then $(CYGPATH_W) 'se/plugins/nfc.c'; else $(CYGPATH_W) '$(srcdir)/se/plugins/nfc.c'; fi`

src/se_seeld-log.o: src/log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/se_seeld-log.o -MD -MP -MF src/$(DEPDIR)/se_seeld-log.Tpo -c -o src/se_seeld-log.o `test -f 'src/log.c' || echo '$(srcdir)/'`src/log.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/se_seeld-log.Tpo src/$(DEPDIR)/se_seeld-log.Po
#	$(AM_V_CC)source='src/log.c' object='src/se_seeld-log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/se_seeld-log.o `test -f 'src/log.c' || echo '$(srcdir)/'`src/log.c

src/se_seeld-log.obj: src/log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/se_seeld-log.obj -MD -MP -MF src/$(DEPDIR)/se_seeld-log.Tpo -c -o src/se_seeld-log.obj `if test -f 'src/log.c'; then $(CYGPATH_W) 'src/log.c'; else $(CYGPATH_W) '$(srcdir)/src/log.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/se_seeld-log.Tpo src/$(DEPDIR)/se_seeld-log.Po
#	$(AM_V_CC)source='src/log.c' object='src/se_seeld-log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/se_seeld-log.obj `if test -f 'src/log.c'; then $(CYGPATH_W) 'src/log.c'; else $(CYGPATH_W) '$(srcdir)/src/log.c'; fi`

src/se_seeld-dbus.o: src/dbus.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/se_seeld-dbus.o -MD -MP -MF src/$(DEPDIR)/se_seeld-dbus.Tpo -c -o src/se_seeld-dbus.o `test -f 'src/dbus.c' || echo '$(srcdir)/'`src/dbus.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/se_seeld-dbus.Tpo src/$(DEPDIR)/se_seeld-dbus.Po
#	$(AM_V_CC)source='src/dbus.c' object='src/se_seeld-dbus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/se_seeld-dbus.o `test -f 'src/dbus.c' || echo '$(srcdir)/'`src/dbus.c

src/se_seeld-dbus.obj: src/dbus.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/se_seeld-dbus.obj -MD -MP -MF src/$(DEPDIR)/se_seeld-dbus.Tpo -c -o src/se_seeld-dbus.obj `if test -f 'src/dbus.c'; then $(CYGPATH_W) 'src/dbus.c'; else $(CYGPATH_W) '$(srcdir)/src/dbus.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/se_seeld-dbus.Tpo src/$(DEPDIR)/se_seeld-dbus.Po
#	$(AM_V_CC)source='src/dbus.c' object='src/se_seeld-dbus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/se_seeld-dbus.obj `if test -f 'src/dbus.c'; then $(CYGPATH_W) 'src/dbus.c'; else $(CYGPATH_W) '$(srcdir)/src/dbus.c'; fi`

src/se_seeld-error.o: src/error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/se_seeld-error.o -MD -MP -MF src/$(DEPDIR)/se_seeld-error.Tpo -c -o src/se_seeld-error.o `test -f 'src/error.c' || echo '$(srcdir)/'`src/error.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/se_seeld-error.Tpo src/$(DEPDIR)/se_seeld-error.Po
#	$(AM_V_CC)source='src/error.c' object='src/se_seeld-error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/se_seeld-error.o `test -f 'src/error.c' || echo '$(srcdir)/'`src/error.c

src/se_seeld-error.obj: src/error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/se_seeld-error.obj -MD -MP -MF src/$(DEPDIR)/se_seeld-error.Tpo -c -o src/se_seeld-error.obj `if test -f 'src/error.c'; then $(CYGPATH_W) 'src/error.c'; else $(CYGPATH_W) '$(srcdir)/src/error.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/se_seeld-error.Tpo src/$(DEPDIR)/se_seeld-error.Po
#	$(AM_V_CC)source='src/error.c' object='src/se_seeld-error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/se_seeld-error.obj `if test -f 'src/error.c'; then $(CYGPATH_W) 'src/error.c'; else $(CYGPATH_W) '$(srcdir)/src/error.c'; fi`

src/se_seeld-plugin.o: src/plugin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/se_seeld-plugin.o -MD -MP -MF src/$(DEPDIR)/se_seeld-plugin.Tpo -c -o src/se_seeld-plugin.o `test -f 'src/plugin.c' || echo '$(srcdir)/'`src/plugin.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/se_seeld-plugin.Tpo src/$(DEPDIR)/se_seeld-plugin.Po
#	$(AM_V_CC)source='src/plugin.c' object='src/se_seeld-plugin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/se_seeld-plugin.o `test -f 'src/plugin.c' || echo '$(srcdir)/'`src/plugin.c

src/se_seeld-plugin.obj: src/plugin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/se_seeld-plugin.obj -MD -MP -MF src/$(DEPDIR)/se_seeld-plugin.Tpo -c -o src/se_seeld-plugin.obj `if test -f 'src/plugin.c'; then $(CYGPATH_W) 'src/plugin.c'; else $(CYGPATH_W) '$(srcdir)/src/plugin.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/se_seeld-plugin.Tpo src/$(DEPDIR)/se_seeld-plugin.Po
#	$(AM_V_CC)source='src/plugin.c' object='src/se_seeld-plugin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/se_seeld-plugin.obj `if test -f 'src/plugin.c'; then $(CYGPATH_W) 'src/plugin.c'; else $(CYGPATH_W) '$(srcdir)/src/plugin.c'; fi`

se/se_seeld-main.o: se/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-main.o -MD -MP -MF se/$(DEPDIR)/se_seeld-main.Tpo -c -o se/se_seeld-main.o `test -f 'se/main.c' || echo '$(srcdir)/'`se/main.c
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-main.Tpo se/$(DEPDIR)/se_seeld-main.Po
#	$(AM_V_CC)source='se/main.c' object='se/se_seeld-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-main.o `test -f 'se/main.c' || echo '$(srcdir)/'`se/main.c

se/se_seeld-main.obj: se/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-main.obj -MD -MP -MF se/$(DEPDIR)/se_seeld-main.Tpo -c -o se/se_seeld-main.obj `if test -f 'se/main.c'; then $(CYGPATH_W) 'se/main.c'; else $(CYGPATH_W) '$(srcdir)/se/main.c'; fi`
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-main.Tpo se/$(DEPDIR)/se_seeld-main.Po
#	$(AM_V_CC)source='se/main.c' object='se/se_seeld-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-main.obj `if test -f 'se/main.c'; then $(CYGPATH_W) 'se/main.c'; else $(CYGPATH_W) '$(srcdir)/se/main.c'; fi`

se/se_seeld-manager.o: se/manager.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-manager.o -MD -MP -MF se/$(DEPDIR)/se_seeld-manager.Tpo -c -o se/se_seeld-manager.o `test -f 'se/manager.c' || echo '$(srcdir)/'`se/manager.c
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-manager.Tpo se/$(DEPDIR)/se_seeld-manager.Po
#	$(AM_V_CC)source='se/manager.c' object='se/se_seeld-manager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-manager.o `test -f 'se/manager.c' || echo '$(srcdir)/'`se/manager.c

se/se_seeld-manager.obj: se/manager.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-manager.obj -MD -MP -MF se/$(DEPDIR)/se_seeld-manager.Tpo -c -o se/se_seeld-manager.obj `if test -f 'se/manager.c'; then $(CYGPATH_W) 'se/manager.c'; else $(CYGPATH_W) '$(srcdir)/se/manager.c'; fi`
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-manager.Tpo se/$(DEPDIR)/se_seeld-manager.Po
#	$(AM_V_CC)source='se/manager.c' object='se/se_seeld-manager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-manager.obj `if test -f 'se/manager.c'; then $(CYGPATH_W) 'se/manager.c'; else $(CYGPATH_W) '$(srcdir)/se/manager.c'; fi`

se/se_seeld-se.o: se/se.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-se.o -MD -MP -MF se/$(DEPDIR)/se_seeld-se.Tpo -c -o se/se_seeld-se.o `test -f 'se/se.c' || echo '$(srcdir)/'`se/se.c
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-se.Tpo se/$(DEPDIR)/se_seeld-se.Po
#	$(AM_V_CC)source='se/se.c' object='se/se_seeld-se.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-se.o `test -f 'se/se.c' || echo '$(srcdir)/'`se/se.c

se/se_seeld-se.obj: se/se.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-se.obj -MD -MP -MF se/$(DEPDIR)/se_seeld-se.Tpo -c -o se/se_seeld-se.obj `if test -f 'se/se.c'; then $(CYGPATH_W) 'se/se.c'; else $(CYGPATH_W) '$(srcdir)/se/se.c'; fi`
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-se.Tpo se/$(DEPDIR)/se_seeld-se.Po
#	$(AM_V_CC)source='se/se.c' object='se/se_seeld-se.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-se.obj `if test -f 'se/se.c'; then $(CYGPATH_W) 'se/se.c'; else $(CYGPATH_W) '$(srcdir)/se/se.c'; fi`

se/se_seeld-driver.o: se/driver.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-driver.o -MD -MP -MF se/$(DEPDIR)/se_seeld-driver.Tpo -c -o se/se_seeld-driver.o `test -f 'se/driver.c' || echo '$(srcdir)/'`se/driver.c
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-driver.Tpo se/$(DEPDIR)/se_seeld-driver.Po
#	$(AM_V_CC)source='se/driver.c' object='se/se_seeld-driver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-driver.o `test -f 'se/driver.c' || echo '$(srcdir)/'`se/driver.c

se/se_seeld-driver.obj: se/driver.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-driver.obj -MD -MP -MF se/$(DEPDIR)/se_seeld-driver.Tpo -c -o se/se_seeld-driver.obj `if test -f 'se/driver.c'; then $(CYGPATH_W) 'se/driver.c'; else $(CYGPATH_W) '$(srcdir)/se/driver.c'; fi`
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-driver.Tpo se/$(DEPDIR)/se_seeld-driver.Po
#	$(AM_V_CC)source='se/driver.c' object='se/se_seeld-driver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-driver.obj `if test -f 'se/driver.c'; then $(CYGPATH_W) 'se/driver.c'; else $(CYGPATH_W) '$(srcdir)/se/driver.c'; fi`

se/se_seeld-apdu.o: se/apdu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-apdu.o -MD -MP -MF se/$(DEPDIR)/se_seeld-apdu.Tpo -c -o se/se_seeld-apdu.o `test -f 'se/apdu.c' || echo '$(srcdir)/'`se/apdu.c
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-apdu.Tpo se/$(DEPDIR)/se_seeld-apdu.Po
#	$(AM_V_CC)source='se/apdu.c' object='se/se_seeld-apdu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-apdu.o `test -f 'se/apdu.c' || echo '$(srcdir)/'`se/apdu.c

se/se_seeld-apdu.obj: se/apdu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-apdu.obj -MD -MP -MF se/$(DEPDIR)/se_seeld-apdu.Tpo -c -o se/se_seeld-apdu.obj `if test -f 'se/apdu.c'; then $(CYGPATH_W) 'se/apdu.c'; else $(CYGPATH_W) '$(srcdir)/se/apdu.c'; fi`
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-apdu.Tpo se/$(DEPDIR)/se_seeld-apdu.Po
#	$(AM_V_CC)source='se/apdu.c' object='se/se_seeld-apdu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-apdu.obj `if test -f 'se/apdu.c'; then $(CYGPATH_W) 'se/apdu.c'; else $(CYGPATH_W) '$(srcdir)/se/apdu.c'; fi`

se/se_seeld-channel.o: se/channel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-channel.o -MD -MP -MF se/$(DEPDIR)/se_seeld-channel.Tpo -c -o se/se_seeld-channel.o `test -f 'se/channel.c' || echo '$(srcdir)/'`se/channel.c
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-channel.Tpo se/$(DEPDIR)/se_seeld-channel.Po
#	$(AM_V_CC)source='se/channel.c' object='se/se_seeld-channel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-channel.o `test -f 'se/channel.c' || echo '$(srcdir)/'`se/channel.c

se/se_seeld-channel.obj: se/channel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-channel.obj -MD -MP -MF se/$(DEPDIR)/se_seeld-channel.Tpo -c -o se/se_seeld-channel.obj `if test -f 'se/channel.c'; then $(CYGPATH_W) 'se/channel.c'; else $(CYGPATH_W) '$(srcdir)/se/channel.c'; fi`
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-channel.Tpo se/$(DEPDIR)/se_seeld-channel.Po
#	$(AM_V_CC)source='se/channel.c' object='se/se_seeld-channel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-channel.obj `if test -f 'se/channel.c'; then $(CYGPATH_W) 'se/channel.c'; else $(CYGPATH_W) '$(srcdir)/se/channel.c'; fi`

se/se_seeld-ace.o: se/ace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-ace.o -MD -MP -MF se/$(DEPDIR)/se_seeld-ace.Tpo -c -o se/se_seeld-ace.o `test -f 'se/ace.c' || echo '$(srcdir)/'`se/ace.c
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-ace.Tpo se/$(DEPDIR)/se_seeld-ace.Po
#	$(AM_V_CC)source='se/ace.c' object='se/se_seeld-ace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-ace.o `test -f 'se/ace.c' || echo '$(srcdir)/'`se/ace.c

se/se_seeld-ace.obj: se/ace.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT se/se_seeld-ace.obj -MD -MP -MF se/$(DEPDIR)/se_seeld-ace.Tpo -c -o se/se_seeld-ace.obj `if test -f 'se/ace.c'; then $(CYGPATH_W) 'se/ace.c'; else $(CYGPATH_W) '$(srcdir)/se/ace.c'; fi`
	$(AM_V_at)$(am__mv) se/$(DEPDIR)/se_seeld-ace.Tpo se/$(DEPDIR)/se_seeld-ace.Po
#	$(AM_V_CC)source='se/ace.c' object='se/se_seeld-ace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(se_seeld_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o se/se_seeld-ace.obj `if test -f 'se/ace.c'; then $(CYGPATH_W) 'se/ace.c'; else $(CYGPATH_W) '$(srcdir)/se/ace.c'; fi`

gdbus/src_neard-mainloop.o: gdbus/mainloop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-mainloop.o -MD -MP -MF gdbus/$(DEPDIR)/src_neard-mainloop.Tpo -c -o gdbus/src_neard-mainloop.o `test -f 'gdbus/mainloop.c' || echo '$(srcdir)/'`gdbus/mainloop.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-mainloop.Tpo gdbus/$(DEPDIR)/src_neard-mainloop.Po
#	$(AM_V_CC)source='gdbus/mainloop.c' object='gdbus/src_neard-mainloop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-mainloop.o `test -f 'gdbus/mainloop.c' || echo '$(srcdir)/'`gdbus/mainloop.c

gdbus/src_neard-mainloop.obj: gdbus/mainloop.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-mainloop.obj -MD -MP -MF gdbus/$(DEPDIR)/src_neard-mainloop.Tpo -c -o gdbus/src_neard-mainloop.obj `if test -f 'gdbus/mainloop.c'; then $(CYGPATH_W) 'gdbus/mainloop.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/mainloop.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-mainloop.Tpo gdbus/$(DEPDIR)/src_neard-mainloop.Po
#	$(AM_V_CC)source='gdbus/mainloop.c' object='gdbus/src_neard-mainloop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-mainloop.obj `if test -f 'gdbus/mainloop.c'; then $(CYGPATH_W) 'gdbus/mainloop.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/mainloop.c'; fi`

gdbus/src_neard-watch.o: gdbus/watch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-watch.o -MD -MP -MF gdbus/$(DEPDIR)/src_neard-watch.Tpo -c -o gdbus/src_neard-watch.o `test -f 'gdbus/watch.c' || echo '$(srcdir)/'`gdbus/watch.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-watch.Tpo gdbus/$(DEPDIR)/src_neard-watch.Po
#	$(AM_V_CC)source='gdbus/watch.c' object='gdbus/src_neard-watch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-watch.o `test -f 'gdbus/watch.c' || echo '$(srcdir)/'`gdbus/watch.c

gdbus/src_neard-watch.obj: gdbus/watch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-watch.obj -MD -MP -MF gdbus/$(DEPDIR)/src_neard-watch.Tpo -c -o gdbus/src_neard-watch.obj `if test -f 'gdbus/watch.c'; then $(CYGPATH_W) 'gdbus/watch.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/watch.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-watch.Tpo gdbus/$(DEPDIR)/src_neard-watch.Po
#	$(AM_V_CC)source='gdbus/watch.c' object='gdbus/src_neard-watch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-watch.obj `if test -f 'gdbus/watch.c'; then $(CYGPATH_W) 'gdbus/watch.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/watch.c'; fi`

gdbus/src_neard-object.o: gdbus/object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-object.o -MD -MP -MF gdbus/$(DEPDIR)/src_neard-object.Tpo -c -o gdbus/src_neard-object.o `test -f 'gdbus/object.c' || echo '$(srcdir)/'`gdbus/object.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-object.Tpo gdbus/$(DEPDIR)/src_neard-object.Po
#	$(AM_V_CC)source='gdbus/object.c' object='gdbus/src_neard-object.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-object.o `test -f 'gdbus/object.c' || echo '$(srcdir)/'`gdbus/object.c

gdbus/src_neard-object.obj: gdbus/object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-object.obj -MD -MP -MF gdbus/$(DEPDIR)/src_neard-object.Tpo -c -o gdbus/src_neard-object.obj `if test -f 'gdbus/object.c'; then $(CYGPATH_W) 'gdbus/object.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/object.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-object.Tpo gdbus/$(DEPDIR)/src_neard-object.Po
#	$(AM_V_CC)source='gdbus/object.c' object='gdbus/src_neard-object.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-object.obj `if test -f 'gdbus/object.c'; then $(CYGPATH_W) 'gdbus/object.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/object.c'; fi`

gdbus/src_neard-client.o: gdbus/client.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-client.o -MD -MP -MF gdbus/$(DEPDIR)/src_neard-client.Tpo -c -o gdbus/src_neard-client.o `test -f 'gdbus/client.c' || echo '$(srcdir)/'`gdbus/client.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-client.Tpo gdbus/$(DEPDIR)/src_neard-client.Po
#	$(AM_V_CC)source='gdbus/client.c' object='gdbus/src_neard-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-client.o `test -f 'gdbus/client.c' || echo '$(srcdir)/'`gdbus/client.c

gdbus/src_neard-client.obj: gdbus/client.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-client.obj -MD -MP -MF gdbus/$(DEPDIR)/src_neard-client.Tpo -c -o gdbus/src_neard-client.obj `if test -f 'gdbus/client.c'; then $(CYGPATH_W) 'gdbus/client.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/client.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-client.Tpo gdbus/$(DEPDIR)/src_neard-client.Po
#	$(AM_V_CC)source='gdbus/client.c' object='gdbus/src_neard-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-client.obj `if test -f 'gdbus/client.c'; then $(CYGPATH_W) 'gdbus/client.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/client.c'; fi`

gdbus/src_neard-polkit.o: gdbus/polkit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-polkit.o -MD -MP -MF gdbus/$(DEPDIR)/src_neard-polkit.Tpo -c -o gdbus/src_neard-polkit.o `test -f 'gdbus/polkit.c' || echo '$(srcdir)/'`gdbus/polkit.c
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-polkit.Tpo gdbus/$(DEPDIR)/src_neard-polkit.Po
#	$(AM_V_CC)source='gdbus/polkit.c' object='gdbus/src_neard-polkit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-polkit.o `test -f 'gdbus/polkit.c' || echo '$(srcdir)/'`gdbus/polkit.c

gdbus/src_neard-polkit.obj: gdbus/polkit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT gdbus/src_neard-polkit.obj -MD -MP -MF gdbus/$(DEPDIR)/src_neard-polkit.Tpo -c -o gdbus/src_neard-polkit.obj `if test -f 'gdbus/polkit.c'; then $(CYGPATH_W) 'gdbus/polkit.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/polkit.c'; fi`
	$(AM_V_at)$(am__mv) gdbus/$(DEPDIR)/src_neard-polkit.Tpo gdbus/$(DEPDIR)/src_neard-polkit.Po
#	$(AM_V_CC)source='gdbus/polkit.c' object='gdbus/src_neard-polkit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o gdbus/src_neard-polkit.obj `if test -f 'gdbus/polkit.c'; then $(CYGPATH_W) 'gdbus/polkit.c'; else $(CYGPATH_W) '$(srcdir)/gdbus/polkit.c'; fi`

plugins/src_neard-nfctype1.o: plugins/nfctype1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype1.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype1.Tpo -c -o plugins/src_neard-nfctype1.o `test -f 'plugins/nfctype1.c' || echo '$(srcdir)/'`plugins/nfctype1.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype1.Tpo plugins/$(DEPDIR)/src_neard-nfctype1.Po
#	$(AM_V_CC)source='plugins/nfctype1.c' object='plugins/src_neard-nfctype1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype1.o `test -f 'plugins/nfctype1.c' || echo '$(srcdir)/'`plugins/nfctype1.c

plugins/src_neard-nfctype1.obj: plugins/nfctype1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype1.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype1.Tpo -c -o plugins/src_neard-nfctype1.obj `if test -f 'plugins/nfctype1.c'; then $(CYGPATH_W) 'plugins/nfctype1.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype1.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype1.Tpo plugins/$(DEPDIR)/src_neard-nfctype1.Po
#	$(AM_V_CC)source='plugins/nfctype1.c' object='plugins/src_neard-nfctype1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype1.obj `if test -f 'plugins/nfctype1.c'; then $(CYGPATH_W) 'plugins/nfctype1.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype1.c'; fi`

plugins/src_neard-nfctype2.o: plugins/nfctype2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype2.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype2.Tpo -c -o plugins/src_neard-nfctype2.o `test -f 'plugins/nfctype2.c' || echo '$(srcdir)/'`plugins/nfctype2.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype2.Tpo plugins/$(DEPDIR)/src_neard-nfctype2.Po
#	$(AM_V_CC)source='plugins/nfctype2.c' object='plugins/src_neard-nfctype2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype2.o `test -f 'plugins/nfctype2.c' || echo '$(srcdir)/'`plugins/nfctype2.c

plugins/src_neard-nfctype2.obj: plugins/nfctype2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype2.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype2.Tpo -c -o plugins/src_neard-nfctype2.obj `if test -f 'plugins/nfctype2.c'; then $(CYGPATH_W) 'plugins/nfctype2.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype2.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype2.Tpo plugins/$(DEPDIR)/src_neard-nfctype2.Po
#	$(AM_V_CC)source='plugins/nfctype2.c' object='plugins/src_neard-nfctype2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype2.obj `if test -f 'plugins/nfctype2.c'; then $(CYGPATH_W) 'plugins/nfctype2.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype2.c'; fi`

plugins/src_neard-mifare.o: plugins/mifare.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-mifare.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-mifare.Tpo -c -o plugins/src_neard-mifare.o `test -f 'plugins/mifare.c' || echo '$(srcdir)/'`plugins/mifare.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-mifare.Tpo plugins/$(DEPDIR)/src_neard-mifare.Po
#	$(AM_V_CC)source='plugins/mifare.c' object='plugins/src_neard-mifare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-mifare.o `test -f 'plugins/mifare.c' || echo '$(srcdir)/'`plugins/mifare.c

plugins/src_neard-mifare.obj: plugins/mifare.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-mifare.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-mifare.Tpo -c -o plugins/src_neard-mifare.obj `if test -f 'plugins/mifare.c'; then $(CYGPATH_W) 'plugins/mifare.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mifare.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-mifare.Tpo plugins/$(DEPDIR)/src_neard-mifare.Po
#	$(AM_V_CC)source='plugins/mifare.c' object='plugins/src_neard-mifare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-mifare.obj `if test -f 'plugins/mifare.c'; then $(CYGPATH_W) 'plugins/mifare.c'; else $(CYGPATH_W) '$(srcdir)/plugins/mifare.c'; fi`

plugins/src_neard-nfctype3.o: plugins/nfctype3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype3.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype3.Tpo -c -o plugins/src_neard-nfctype3.o `test -f 'plugins/nfctype3.c' || echo '$(srcdir)/'`plugins/nfctype3.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype3.Tpo plugins/$(DEPDIR)/src_neard-nfctype3.Po
#	$(AM_V_CC)source='plugins/nfctype3.c' object='plugins/src_neard-nfctype3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype3.o `test -f 'plugins/nfctype3.c' || echo '$(srcdir)/'`plugins/nfctype3.c

plugins/src_neard-nfctype3.obj: plugins/nfctype3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype3.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype3.Tpo -c -o plugins/src_neard-nfctype3.obj `if test -f 'plugins/nfctype3.c'; then $(CYGPATH_W) 'plugins/nfctype3.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype3.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype3.Tpo plugins/$(DEPDIR)/src_neard-nfctype3.Po
#	$(AM_V_CC)source='plugins/nfctype3.c' object='plugins/src_neard-nfctype3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype3.obj `if test -f 'plugins/nfctype3.c'; then $(CYGPATH_W) 'plugins/nfctype3.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype3.c'; fi`

plugins/src_neard-nfctype4.o: plugins/nfctype4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype4.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype4.Tpo -c -o plugins/src_neard-nfctype4.o `test -f 'plugins/nfctype4.c' || echo '$(srcdir)/'`plugins/nfctype4.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype4.Tpo plugins/$(DEPDIR)/src_neard-nfctype4.Po
#	$(AM_V_CC)source='plugins/nfctype4.c' object='plugins/src_neard-nfctype4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype4.o `test -f 'plugins/nfctype4.c' || echo '$(srcdir)/'`plugins/nfctype4.c

plugins/src_neard-nfctype4.obj: plugins/nfctype4.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype4.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype4.Tpo -c -o plugins/src_neard-nfctype4.obj `if test -f 'plugins/nfctype4.c'; then $(CYGPATH_W) 'plugins/nfctype4.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype4.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype4.Tpo plugins/$(DEPDIR)/src_neard-nfctype4.Po
#	$(AM_V_CC)source='plugins/nfctype4.c' object='plugins/src_neard-nfctype4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype4.obj `if test -f 'plugins/nfctype4.c'; then $(CYGPATH_W) 'plugins/nfctype4.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype4.c'; fi`

plugins/src_neard-nfctype5.o: plugins/nfctype5.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype5.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype5.Tpo -c -o plugins/src_neard-nfctype5.o `test -f 'plugins/nfctype5.c' || echo '$(srcdir)/'`plugins/nfctype5.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype5.Tpo plugins/$(DEPDIR)/src_neard-nfctype5.Po
#	$(AM_V_CC)source='plugins/nfctype5.c' object='plugins/src_neard-nfctype5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype5.o `test -f 'plugins/nfctype5.c' || echo '$(srcdir)/'`plugins/nfctype5.c

plugins/src_neard-nfctype5.obj: plugins/nfctype5.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-nfctype5.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-nfctype5.Tpo -c -o plugins/src_neard-nfctype5.obj `if test -f 'plugins/nfctype5.c'; then $(CYGPATH_W) 'plugins/nfctype5.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype5.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-nfctype5.Tpo plugins/$(DEPDIR)/src_neard-nfctype5.Po
#	$(AM_V_CC)source='plugins/nfctype5.c' object='plugins/src_neard-nfctype5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-nfctype5.obj `if test -f 'plugins/nfctype5.c'; then $(CYGPATH_W) 'plugins/nfctype5.c'; else $(CYGPATH_W) '$(srcdir)/plugins/nfctype5.c'; fi`

plugins/src_neard-p2p.o: plugins/p2p.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-p2p.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-p2p.Tpo -c -o plugins/src_neard-p2p.o `test -f 'plugins/p2p.c' || echo '$(srcdir)/'`plugins/p2p.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-p2p.Tpo plugins/$(DEPDIR)/src_neard-p2p.Po
#	$(AM_V_CC)source='plugins/p2p.c' object='plugins/src_neard-p2p.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-p2p.o `test -f 'plugins/p2p.c' || echo '$(srcdir)/'`plugins/p2p.c

plugins/src_neard-p2p.obj: plugins/p2p.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-p2p.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-p2p.Tpo -c -o plugins/src_neard-p2p.obj `if test -f 'plugins/p2p.c'; then $(CYGPATH_W) 'plugins/p2p.c'; else $(CYGPATH_W) '$(srcdir)/plugins/p2p.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-p2p.Tpo plugins/$(DEPDIR)/src_neard-p2p.Po
#	$(AM_V_CC)source='plugins/p2p.c' object='plugins/src_neard-p2p.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-p2p.obj `if test -f 'plugins/p2p.c'; then $(CYGPATH_W) 'plugins/p2p.c'; else $(CYGPATH_W) '$(srcdir)/plugins/p2p.c'; fi`

plugins/src_neard-npp.o: plugins/npp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-npp.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-npp.Tpo -c -o plugins/src_neard-npp.o `test -f 'plugins/npp.c' || echo '$(srcdir)/'`plugins/npp.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-npp.Tpo plugins/$(DEPDIR)/src_neard-npp.Po
#	$(AM_V_CC)source='plugins/npp.c' object='plugins/src_neard-npp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-npp.o `test -f 'plugins/npp.c' || echo '$(srcdir)/'`plugins/npp.c

plugins/src_neard-npp.obj: plugins/npp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-npp.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-npp.Tpo -c -o plugins/src_neard-npp.obj `if test -f 'plugins/npp.c'; then $(CYGPATH_W) 'plugins/npp.c'; else $(CYGPATH_W) '$(srcdir)/plugins/npp.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-npp.Tpo plugins/$(DEPDIR)/src_neard-npp.Po
#	$(AM_V_CC)source='plugins/npp.c' object='plugins/src_neard-npp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-npp.obj `if test -f 'plugins/npp.c'; then $(CYGPATH_W) 'plugins/npp.c'; else $(CYGPATH_W) '$(srcdir)/plugins/npp.c'; fi`

plugins/src_neard-snep.o: plugins/snep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-snep.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-snep.Tpo -c -o plugins/src_neard-snep.o `test -f 'plugins/snep.c' || echo '$(srcdir)/'`plugins/snep.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-snep.Tpo plugins/$(DEPDIR)/src_neard-snep.Po
#	$(AM_V_CC)source='plugins/snep.c' object='plugins/src_neard-snep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-snep.o `test -f 'plugins/snep.c' || echo '$(srcdir)/'`plugins/snep.c

plugins/src_neard-snep.obj: plugins/snep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-snep.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-snep.Tpo -c -o plugins/src_neard-snep.obj `if test -f 'plugins/snep.c'; then $(CYGPATH_W) 'plugins/snep.c'; else $(CYGPATH_W) '$(srcdir)/plugins/snep.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-snep.Tpo plugins/$(DEPDIR)/src_neard-snep.Po
#	$(AM_V_CC)source='plugins/snep.c' object='plugins/src_neard-snep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-snep.obj `if test -f 'plugins/snep.c'; then $(CYGPATH_W) 'plugins/snep.c'; else $(CYGPATH_W) '$(srcdir)/plugins/snep.c'; fi`

plugins/src_neard-snep-validation.o: plugins/snep-validation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-snep-validation.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-snep-validation.Tpo -c -o plugins/src_neard-snep-validation.o `test -f 'plugins/snep-validation.c' || echo '$(srcdir)/'`plugins/snep-validation.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-snep-validation.Tpo plugins/$(DEPDIR)/src_neard-snep-validation.Po
#	$(AM_V_CC)source='plugins/snep-validation.c' object='plugins/src_neard-snep-validation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-snep-validation.o `test -f 'plugins/snep-validation.c' || echo '$(srcdir)/'`plugins/snep-validation.c

plugins/src_neard-snep-validation.obj: plugins/snep-validation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-snep-validation.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-snep-validation.Tpo -c -o plugins/src_neard-snep-validation.obj `if test -f 'plugins/snep-validation.c'; then $(CYGPATH_W) 'plugins/snep-validation.c'; else $(CYGPATH_W) '$(srcdir)/plugins/snep-validation.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-snep-validation.Tpo plugins/$(DEPDIR)/src_neard-snep-validation.Po
#	$(AM_V_CC)source='plugins/snep-validation.c' object='plugins/src_neard-snep-validation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-snep-validation.obj `if test -f 'plugins/snep-validation.c'; then $(CYGPATH_W) 'plugins/snep-validation.c'; else $(CYGPATH_W) '$(srcdir)/plugins/snep-validation.c'; fi`

plugins/src_neard-llcp-validation.o: plugins/llcp-validation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-llcp-validation.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-llcp-validation.Tpo -c -o plugins/src_neard-llcp-validation.o `test -f 'plugins/llcp-validation.c' || echo '$(srcdir)/'`plugins/llcp-validation.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-llcp-validation.Tpo plugins/$(DEPDIR)/src_neard-llcp-validation.Po
#	$(AM_V_CC)source='plugins/llcp-validation.c' object='plugins/src_neard-llcp-validation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-llcp-validation.o `test -f 'plugins/llcp-validation.c' || echo '$(srcdir)/'`plugins/llcp-validation.c

plugins/src_neard-llcp-validation.obj: plugins/llcp-validation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-llcp-validation.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-llcp-validation.Tpo -c -o plugins/src_neard-llcp-validation.obj `if test -f 'plugins/llcp-validation.c'; then $(CYGPATH_W) 'plugins/llcp-validation.c'; else $(CYGPATH_W) '$(srcdir)/plugins/llcp-validation.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-llcp-validation.Tpo plugins/$(DEPDIR)/src_neard-llcp-validation.Po
#	$(AM_V_CC)source='plugins/llcp-validation.c' object='plugins/src_neard-llcp-validation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-llcp-validation.obj `if test -f 'plugins/llcp-validation.c'; then $(CYGPATH_W) 'plugins/llcp-validation.c'; else $(CYGPATH_W) '$(srcdir)/plugins/llcp-validation.c'; fi`

plugins/src_neard-handover.o: plugins/handover.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-handover.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-handover.Tpo -c -o plugins/src_neard-handover.o `test -f 'plugins/handover.c' || echo '$(srcdir)/'`plugins/handover.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-handover.Tpo plugins/$(DEPDIR)/src_neard-handover.Po
#	$(AM_V_CC)source='plugins/handover.c' object='plugins/src_neard-handover.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-handover.o `test -f 'plugins/handover.c' || echo '$(srcdir)/'`plugins/handover.c

plugins/src_neard-handover.obj: plugins/handover.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-handover.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-handover.Tpo -c -o plugins/src_neard-handover.obj `if test -f 'plugins/handover.c'; then $(CYGPATH_W) 'plugins/handover.c'; else $(CYGPATH_W) '$(srcdir)/plugins/handover.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-handover.Tpo plugins/$(DEPDIR)/src_neard-handover.Po
#	$(AM_V_CC)source='plugins/handover.c' object='plugins/src_neard-handover.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-handover.obj `if test -f 'plugins/handover.c'; then $(CYGPATH_W) 'plugins/handover.c'; else $(CYGPATH_W) '$(srcdir)/plugins/handover.c'; fi`

plugins/src_neard-phdc.o: plugins/phdc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-phdc.o -MD -MP -MF plugins/$(DEPDIR)/src_neard-phdc.Tpo -c -o plugins/src_neard-phdc.o `test -f 'plugins/phdc.c' || echo '$(srcdir)/'`plugins/phdc.c
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-phdc.Tpo plugins/$(DEPDIR)/src_neard-phdc.Po
#	$(AM_V_CC)source='plugins/phdc.c' object='plugins/src_neard-phdc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-phdc.o `test -f 'plugins/phdc.c' || echo '$(srcdir)/'`plugins/phdc.c

plugins/src_neard-phdc.obj: plugins/phdc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT plugins/src_neard-phdc.obj -MD -MP -MF plugins/$(DEPDIR)/src_neard-phdc.Tpo -c -o plugins/src_neard-phdc.obj `if test -f 'plugins/phdc.c'; then $(CYGPATH_W) 'plugins/phdc.c'; else $(CYGPATH_W) '$(srcdir)/plugins/phdc.c'; fi`
	$(AM_V_at)$(am__mv) plugins/$(DEPDIR)/src_neard-phdc.Tpo plugins/$(DEPDIR)/src_neard-phdc.Po
#	$(AM_V_CC)source='plugins/phdc.c' object='plugins/src_neard-phdc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o plugins/src_neard-phdc.obj `if test -f 'plugins/phdc.c'; then $(CYGPATH_W) 'plugins/phdc.c'; else $(CYGPATH_W) '$(srcdir)/plugins/phdc.c'; fi`

src/src_neard-main.o: src/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-main.o -MD -MP -MF src/$(DEPDIR)/src_neard-main.Tpo -c -o src/src_neard-main.o `test -f 'src/main.c' || echo '$(srcdir)/'`src/main.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-main.Tpo src/$(DEPDIR)/src_neard-main.Po
#	$(AM_V_CC)source='src/main.c' object='src/src_neard-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-main.o `test -f 'src/main.c' || echo '$(srcdir)/'`src/main.c

src/src_neard-main.obj: src/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-main.obj -MD -MP -MF src/$(DEPDIR)/src_neard-main.Tpo -c -o src/src_neard-main.obj `if test -f 'src/main.c'; then $(CYGPATH_W) 'src/main.c'; else $(CYGPATH_W) '$(srcdir)/src/main.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-main.Tpo src/$(DEPDIR)/src_neard-main.Po
#	$(AM_V_CC)source='src/main.c' object='src/src_neard-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-main.obj `if test -f 'src/main.c'; then $(CYGPATH_W) 'src/main.c'; else $(CYGPATH_W) '$(srcdir)/src/main.c'; fi`

src/src_neard-error.o: src/error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-error.o -MD -MP -MF src/$(DEPDIR)/src_neard-error.Tpo -c -o src/src_neard-error.o `test -f 'src/error.c' || echo '$(srcdir)/'`src/error.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-error.Tpo src/$(DEPDIR)/src_neard-error.Po
#	$(AM_V_CC)source='src/error.c' object='src/src_neard-error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-error.o `test -f 'src/error.c' || echo '$(srcdir)/'`src/error.c

src/src_neard-error.obj: src/error.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-error.obj -MD -MP -MF src/$(DEPDIR)/src_neard-error.Tpo -c -o src/src_neard-error.obj `if test -f 'src/error.c'; then $(CYGPATH_W) 'src/error.c'; else $(CYGPATH_W) '$(srcdir)/src/error.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-error.Tpo src/$(DEPDIR)/src_neard-error.Po
#	$(AM_V_CC)source='src/error.c' object='src/src_neard-error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-error.obj `if test -f 'src/error.c'; then $(CYGPATH_W) 'src/error.c'; else $(CYGPATH_W) '$(srcdir)/src/error.c'; fi`

src/src_neard-log.o: src/log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-log.o -MD -MP -MF src/$(DEPDIR)/src_neard-log.Tpo -c -o src/src_neard-log.o `test -f 'src/log.c' || echo '$(srcdir)/'`src/log.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-log.Tpo src/$(DEPDIR)/src_neard-log.Po
#	$(AM_V_CC)source='src/log.c' object='src/src_neard-log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-log.o `test -f 'src/log.c' || echo '$(srcdir)/'`src/log.c

src/src_neard-log.obj: src/log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-log.obj -MD -MP -MF src/$(DEPDIR)/src_neard-log.Tpo -c -o src/src_neard-log.obj `if test -f 'src/log.c'; then $(CYGPATH_W) 'src/log.c'; else $(CYGPATH_W) '$(srcdir)/src/log.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-log.Tpo src/$(DEPDIR)/src_neard-log.Po
#	$(AM_V_CC)source='src/log.c' object='src/src_neard-log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-log.obj `if test -f 'src/log.c'; then $(CYGPATH_W) 'src/log.c'; else $(CYGPATH_W) '$(srcdir)/src/log.c'; fi`

src/src_neard-dbus.o: src/dbus.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-dbus.o -MD -MP -MF src/$(DEPDIR)/src_neard-dbus.Tpo -c -o src/src_neard-dbus.o `test -f 'src/dbus.c' || echo '$(srcdir)/'`src/dbus.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-dbus.Tpo src/$(DEPDIR)/src_neard-dbus.Po
#	$(AM_V_CC)source='src/dbus.c' object='src/src_neard-dbus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-dbus.o `test -f 'src/dbus.c' || echo '$(srcdir)/'`src/dbus.c

src/src_neard-dbus.obj: src/dbus.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-dbus.obj -MD -MP -MF src/$(DEPDIR)/src_neard-dbus.Tpo -c -o src/src_neard-dbus.obj `if test -f 'src/dbus.c'; then $(CYGPATH_W) 'src/dbus.c'; else $(CYGPATH_W) '$(srcdir)/src/dbus.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-dbus.Tpo src/$(DEPDIR)/src_neard-dbus.Po
#	$(AM_V_CC)source='src/dbus.c' object='src/src_neard-dbus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-dbus.obj `if test -f 'src/dbus.c'; then $(CYGPATH_W) 'src/dbus.c'; else $(CYGPATH_W) '$(srcdir)/src/dbus.c'; fi`

src/src_neard-manager.o: src/manager.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-manager.o -MD -MP -MF src/$(DEPDIR)/src_neard-manager.Tpo -c -o src/src_neard-manager.o `test -f 'src/manager.c' || echo '$(srcdir)/'`src/manager.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-manager.Tpo src/$(DEPDIR)/src_neard-manager.Po
#	$(AM_V_CC)source='src/manager.c' object='src/src_neard-manager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-manager.o `test -f 'src/manager.c' || echo '$(srcdir)/'`src/manager.c

src/src_neard-manager.obj: src/manager.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-manager.obj -MD -MP -MF src/$(DEPDIR)/src_neard-manager.Tpo -c -o src/src_neard-manager.obj `if test -f 'src/manager.c'; then $(CYGPATH_W) 'src/manager.c'; else $(CYGPATH_W) '$(srcdir)/src/manager.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-manager.Tpo src/$(DEPDIR)/src_neard-manager.Po
#	$(AM_V_CC)source='src/manager.c' object='src/src_neard-manager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-manager.obj `if test -f 'src/manager.c'; then $(CYGPATH_W) 'src/manager.c'; else $(CYGPATH_W) '$(srcdir)/src/manager.c'; fi`

src/src_neard-adapter.o: src/adapter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-adapter.o -MD -MP -MF src/$(DEPDIR)/src_neard-adapter.Tpo -c -o src/src_neard-adapter.o `test -f 'src/adapter.c' || echo '$(srcdir)/'`src/adapter.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-adapter.Tpo src/$(DEPDIR)/src_neard-adapter.Po
#	$(AM_V_CC)source='src/adapter.c' object='src/src_neard-adapter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-adapter.o `test -f 'src/adapter.c' || echo '$(srcdir)/'`src/adapter.c

src/src_neard-adapter.obj: src/adapter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-adapter.obj -MD -MP -MF src/$(DEPDIR)/src_neard-adapter.Tpo -c -o src/src_neard-adapter.obj `if test -f 'src/adapter.c'; then $(CYGPATH_W) 'src/adapter.c'; else $(CYGPATH_W) '$(srcdir)/src/adapter.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-adapter.Tpo src/$(DEPDIR)/src_neard-adapter.Po
#	$(AM_V_CC)source='src/adapter.c' object='src/src_neard-adapter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-adapter.obj `if test -f 'src/adapter.c'; then $(CYGPATH_W) 'src/adapter.c'; else $(CYGPATH_W) '$(srcdir)/src/adapter.c'; fi`

src/src_neard-device.o: src/device.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-device.o -MD -MP -MF src/$(DEPDIR)/src_neard-device.Tpo -c -o src/src_neard-device.o `test -f 'src/device.c' || echo '$(srcdir)/'`src/device.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-device.Tpo src/$(DEPDIR)/src_neard-device.Po
#	$(AM_V_CC)source='src/device.c' object='src/src_neard-device.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-device.o `test -f 'src/device.c' || echo '$(srcdir)/'`src/device.c

src/src_neard-device.obj: src/device.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-device.obj -MD -MP -MF src/$(DEPDIR)/src_neard-device.Tpo -c -o src/src_neard-device.obj `if test -f 'src/device.c'; then $(CYGPATH_W) 'src/device.c'; else $(CYGPATH_W) '$(srcdir)/src/device.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-device.Tpo src/$(DEPDIR)/src_neard-device.Po
#	$(AM_V_CC)source='src/device.c' object='src/src_neard-device.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-device.obj `if test -f 'src/device.c'; then $(CYGPATH_W) 'src/device.c'; else $(CYGPATH_W) '$(srcdir)/src/device.c'; fi`

src/src_neard-tag.o: src/tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-tag.o -MD -MP -MF src/$(DEPDIR)/src_neard-tag.Tpo -c -o src/src_neard-tag.o `test -f 'src/tag.c' || echo '$(srcdir)/'`src/tag.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-tag.Tpo src/$(DEPDIR)/src_neard-tag.Po
#	$(AM_V_CC)source='src/tag.c' object='src/src_neard-tag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-tag.o `test -f 'src/tag.c' || echo '$(srcdir)/'`src/tag.c

src/src_neard-tag.obj: src/tag.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-tag.obj -MD -MP -MF src/$(DEPDIR)/src_neard-tag.Tpo -c -o src/src_neard-tag.obj `if test -f 'src/tag.c'; then $(CYGPATH_W) 'src/tag.c'; else $(CYGPATH_W) '$(srcdir)/src/tag.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-tag.Tpo src/$(DEPDIR)/src_neard-tag.Po
#	$(AM_V_CC)source='src/tag.c' object='src/src_neard-tag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-tag.obj `if test -f 'src/tag.c'; then $(CYGPATH_W) 'src/tag.c'; else $(CYGPATH_W) '$(srcdir)/src/tag.c'; fi`

src/src_neard-plugin.o: src/plugin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-plugin.o -MD -MP -MF src/$(DEPDIR)/src_neard-plugin.Tpo -c -o src/src_neard-plugin.o `test -f 'src/plugin.c' || echo '$(srcdir)/'`src/plugin.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-plugin.Tpo src/$(DEPDIR)/src_neard-plugin.Po
#	$(AM_V_CC)source='src/plugin.c' object='src/src_neard-plugin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-plugin.o `test -f 'src/plugin.c' || echo '$(srcdir)/'`src/plugin.c

src/src_neard-plugin.obj: src/plugin.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-plugin.obj -MD -MP -MF src/$(DEPDIR)/src_neard-plugin.Tpo -c -o src/src_neard-plugin.obj `if test -f 'src/plugin.c'; then $(CYGPATH_W) 'src/plugin.c'; else $(CYGPATH_W) '$(srcdir)/src/plugin.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-plugin.Tpo src/$(DEPDIR)/src_neard-plugin.Po
#	$(AM_V_CC)source='src/plugin.c' object='src/src_neard-plugin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-plugin.obj `if test -f 'src/plugin.c'; then $(CYGPATH_W) 'src/plugin.c'; else $(CYGPATH_W) '$(srcdir)/src/plugin.c'; fi`

src/src_neard-netlink.o: src/netlink.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-netlink.o -MD -MP -MF src/$(DEPDIR)/src_neard-netlink.Tpo -c -o src/src_neard-netlink.o `test -f 'src/netlink.c' || echo '$(srcdir)/'`src/netlink.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-netlink.Tpo src/$(DEPDIR)/src_neard-netlink.Po
#	$(AM_V_CC)source='src/netlink.c' object='src/src_neard-netlink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-netlink.o `test -f 'src/netlink.c' || echo '$(srcdir)/'`src/netlink.c

src/src_neard-netlink.obj: src/netlink.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-netlink.obj -MD -MP -MF src/$(DEPDIR)/src_neard-netlink.Tpo -c -o src/src_neard-netlink.obj `if test -f 'src/netlink.c'; then $(CYGPATH_W) 'src/netlink.c'; else $(CYGPATH_W) '$(srcdir)/src/netlink.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-netlink.Tpo src/$(DEPDIR)/src_neard-netlink.Po
#	$(AM_V_CC)source='src/netlink.c' object='src/src_neard-netlink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-netlink.obj `if test -f 'src/netlink.c'; then $(CYGPATH_W) 'src/netlink.c'; else $(CYGPATH_W) '$(srcdir)/src/netlink.c'; fi`

src/src_neard-ndef.o: src/ndef.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-ndef.o -MD -MP -MF src/$(DEPDIR)/src_neard-ndef.Tpo -c -o src/src_neard-ndef.o `test -f 'src/ndef.c' || echo '$(srcdir)/'`src/ndef.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-ndef.Tpo src/$(DEPDIR)/src_neard-ndef.Po
#	$(AM_V_CC)source='src/ndef.c' object='src/src_neard-ndef.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-ndef.o `test -f 'src/ndef.c' || echo '$(srcdir)/'`src/ndef.c

src/src_neard-ndef.obj: src/ndef.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-ndef.obj -MD -MP -MF src/$(DEPDIR)/src_neard-ndef.Tpo -c -o src/src_neard-ndef.obj `if test -f 'src/ndef.c'; then $(CYGPATH_W) 'src/ndef.c'; else $(CYGPATH_W) '$(srcdir)/src/ndef.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-ndef.Tpo src/$(DEPDIR)/src_neard-ndef.Po
#	$(AM_V_CC)source='src/ndef.c' object='src/src_neard-ndef.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-ndef.obj `if test -f 'src/ndef.c'; then $(CYGPATH_W) 'src/ndef.c'; else $(CYGPATH_W) '$(srcdir)/src/ndef.c'; fi`

src/src_neard-tlv.o: src/tlv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-tlv.o -MD -MP -MF src/$(DEPDIR)/src_neard-tlv.Tpo -c -o src/src_neard-tlv.o `test -f 'src/tlv.c' || echo '$(srcdir)/'`src/tlv.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-tlv.Tpo src/$(DEPDIR)/src_neard-tlv.Po
#	$(AM_V_CC)source='src/tlv.c' object='src/src_neard-tlv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-tlv.o `test -f 'src/tlv.c' || echo '$(srcdir)/'`src/tlv.c

src/src_neard-tlv.obj: src/tlv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-tlv.obj -MD -MP -MF src/$(DEPDIR)/src_neard-tlv.Tpo -c -o src/src_neard-tlv.obj `if test -f 'src/tlv.c'; then $(CYGPATH_W) 'src/tlv.c'; else $(CYGPATH_W) '$(srcdir)/src/tlv.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-tlv.Tpo src/$(DEPDIR)/src_neard-tlv.Po
#	$(AM_V_CC)source='src/tlv.c' object='src/src_neard-tlv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-tlv.obj `if test -f 'src/tlv.c'; then $(CYGPATH_W) 'src/tlv.c'; else $(CYGPATH_W) '$(srcdir)/src/tlv.c'; fi`

src/src_neard-bluetooth.o: src/bluetooth.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-bluetooth.o -MD -MP -MF src/$(DEPDIR)/src_neard-bluetooth.Tpo -c -o src/src_neard-bluetooth.o `test -f 'src/bluetooth.c' || echo '$(srcdir)/'`src/bluetooth.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-bluetooth.Tpo src/$(DEPDIR)/src_neard-bluetooth.Po
#	$(AM_V_CC)source='src/bluetooth.c' object='src/src_neard-bluetooth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-bluetooth.o `test -f 'src/bluetooth.c' || echo '$(srcdir)/'`src/bluetooth.c

src/src_neard-bluetooth.obj: src/bluetooth.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-bluetooth.obj -MD -MP -MF src/$(DEPDIR)/src_neard-bluetooth.Tpo -c -o src/src_neard-bluetooth.obj `if test -f 'src/bluetooth.c'; then $(CYGPATH_W) 'src/bluetooth.c'; else $(CYGPATH_W) '$(srcdir)/src/bluetooth.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-bluetooth.Tpo src/$(DEPDIR)/src_neard-bluetooth.Po
#	$(AM_V_CC)source='src/bluetooth.c' object='src/src_neard-bluetooth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-bluetooth.obj `if test -f 'src/bluetooth.c'; then $(CYGPATH_W) 'src/bluetooth.c'; else $(CYGPATH_W) '$(srcdir)/src/bluetooth.c'; fi`

src/src_neard-agent.o: src/agent.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-agent.o -MD -MP -MF src/$(DEPDIR)/src_neard-agent.Tpo -c -o src/src_neard-agent.o `test -f 'src/agent.c' || echo '$(srcdir)/'`src/agent.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-agent.Tpo src/$(DEPDIR)/src_neard-agent.Po
#	$(AM_V_CC)source='src/agent.c' object='src/src_neard-agent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-agent.o `test -f 'src/agent.c' || echo '$(srcdir)/'`src/agent.c

src/src_neard-agent.obj: src/agent.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-agent.obj -MD -MP -MF src/$(DEPDIR)/src_neard-agent.Tpo -c -o src/src_neard-agent.obj `if test -f 'src/agent.c'; then $(CYGPATH_W) 'src/agent.c'; else $(CYGPATH_W) '$(srcdir)/src/agent.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-agent.Tpo src/$(DEPDIR)/src_neard-agent.Po
#	$(AM_V_CC)source='src/agent.c' object='src/src_neard-agent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-agent.obj `if test -f 'src/agent.c'; then $(CYGPATH_W) 'src/agent.c'; else $(CYGPATH_W) '$(srcdir)/src/agent.c'; fi`

src/src_neard-snep.o: src/snep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-snep.o -MD -MP -MF src/$(DEPDIR)/src_neard-snep.Tpo -c -o src/src_neard-snep.o `test -f 'src/snep.c' || echo '$(srcdir)/'`src/snep.c
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-snep.Tpo src/$(DEPDIR)/src_neard-snep.Po
#	$(AM_V_CC)source='src/snep.c' object='src/src_neard-snep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-snep.o `test -f 'src/snep.c' || echo '$(srcdir)/'`src/snep.c

src/src_neard-snep.obj: src/snep.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -MT src/src_neard-snep.obj -MD -MP -MF src/$(DEPDIR)/src_neard-snep.Tpo -c -o src/src_neard-snep.obj `if test -f 'src/snep.c'; then $(CYGPATH_W) 'src/snep.c'; else $(CYGPATH_W) '$(srcdir)/src/snep.c'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/src_neard-snep.Tpo src/$(DEPDIR)/src_neard-snep.Po
#	$(AM_V_CC)source='src/snep.c' object='src/src_neard-snep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(src_neard_CPPFLAGS) $(CPPFLAGS) $(src_neard_CFLAGS) $(CFLAGS) -c -o src/src_neard-snep.obj `if test -f 'src/snep.c'; then $(CYGPATH_W) 'src/snep.c'; else $(CYGPATH_W) '$(srcdir)/src/snep.c'; fi`

tools/nfctool/tools_nfctool_nfctool-main.o: tools/nfctool/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-main.o -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-main.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-main.o `test -f 'tools/nfctool/main.c' || echo '$(srcdir)/'`tools/nfctool/main.c
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-main.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-main.Po
#	$(AM_V_CC)source='tools/nfctool/main.c' object='tools/nfctool/tools_nfctool_nfctool-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-main.o `test -f 'tools/nfctool/main.c' || echo '$(srcdir)/'`tools/nfctool/main.c

tools/nfctool/tools_nfctool_nfctool-main.obj: tools/nfctool/main.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-main.obj -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-main.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-main.obj `if test -f 'tools/nfctool/main.c'; then $(CYGPATH_W) 'tools/nfctool/main.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/main.c'; fi`
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-main.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-main.Po
#	$(AM_V_CC)source='tools/nfctool/main.c' object='tools/nfctool/tools_nfctool_nfctool-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-main.obj `if test -f 'tools/nfctool/main.c'; then $(CYGPATH_W) 'tools/nfctool/main.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/main.c'; fi`

tools/nfctool/tools_nfctool_nfctool-adapter.o: tools/nfctool/adapter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-adapter.o -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-adapter.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-adapter.o `test -f 'tools/nfctool/adapter.c' || echo '$(srcdir)/'`tools/nfctool/adapter.c
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-adapter.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-adapter.Po
#	$(AM_V_CC)source='tools/nfctool/adapter.c' object='tools/nfctool/tools_nfctool_nfctool-adapter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-adapter.o `test -f 'tools/nfctool/adapter.c' || echo '$(srcdir)/'`tools/nfctool/adapter.c

tools/nfctool/tools_nfctool_nfctool-adapter.obj: tools/nfctool/adapter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-adapter.obj -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-adapter.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-adapter.obj `if test -f 'tools/nfctool/adapter.c'; then $(CYGPATH_W) 'tools/nfctool/adapter.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/adapter.c'; fi`
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-adapter.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-adapter.Po
#	$(AM_V_CC)source='tools/nfctool/adapter.c' object='tools/nfctool/tools_nfctool_nfctool-adapter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-adapter.obj `if test -f 'tools/nfctool/adapter.c'; then $(CYGPATH_W) 'tools/nfctool/adapter.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/adapter.c'; fi`

tools/nfctool/tools_nfctool_nfctool-netlink.o: tools/nfctool/netlink.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-netlink.o -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-netlink.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-netlink.o `test -f 'tools/nfctool/netlink.c' || echo '$(srcdir)/'`tools/nfctool/netlink.c
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-netlink.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-netlink.Po
#	$(AM_V_CC)source='tools/nfctool/netlink.c' object='tools/nfctool/tools_nfctool_nfctool-netlink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-netlink.o `test -f 'tools/nfctool/netlink.c' || echo '$(srcdir)/'`tools/nfctool/netlink.c

tools/nfctool/tools_nfctool_nfctool-netlink.obj: tools/nfctool/netlink.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-netlink.obj -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-netlink.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-netlink.obj `if test -f 'tools/nfctool/netlink.c'; then $(CYGPATH_W) 'tools/nfctool/netlink.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/netlink.c'; fi`
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-netlink.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-netlink.Po
#	$(AM_V_CC)source='tools/nfctool/netlink.c' object='tools/nfctool/tools_nfctool_nfctool-netlink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-netlink.obj `if test -f 'tools/nfctool/netlink.c'; then $(CYGPATH_W) 'tools/nfctool/netlink.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/netlink.c'; fi`

tools/nfctool/tools_nfctool_nfctool-sniffer.o: tools/nfctool/sniffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-sniffer.o -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-sniffer.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-sniffer.o `test -f 'tools/nfctool/sniffer.c' || echo '$(srcdir)/'`tools/nfctool/sniffer.c
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-sniffer.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-sniffer.Po
#	$(AM_V_CC)source='tools/nfctool/sniffer.c' object='tools/nfctool/tools_nfctool_nfctool-sniffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-sniffer.o `test -f 'tools/nfctool/sniffer.c' || echo '$(srcdir)/'`tools/nfctool/sniffer.c

tools/nfctool/tools_nfctool_nfctool-sniffer.obj: tools/nfctool/sniffer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-sniffer.obj -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-sniffer.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-sniffer.obj `if test -f 'tools/nfctool/sniffer.c'; then $(CYGPATH_W) 'tools/nfctool/sniffer.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/sniffer.c'; fi`
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-sniffer.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-sniffer.Po
#	$(AM_V_CC)source='tools/nfctool/sniffer.c' object='tools/nfctool/tools_nfctool_nfctool-sniffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-sniffer.obj `if test -f 'tools/nfctool/sniffer.c'; then $(CYGPATH_W) 'tools/nfctool/sniffer.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/sniffer.c'; fi`

tools/nfctool/tools_nfctool_nfctool-llcp-decode.o: tools/nfctool/llcp-decode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-llcp-decode.o -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-llcp-decode.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-llcp-decode.o `test -f 'tools/nfctool/llcp-decode.c' || echo '$(srcdir)/'`tools/nfctool/llcp-decode.c
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-llcp-decode.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-llcp-decode.Po
#	$(AM_V_CC)source='tools/nfctool/llcp-decode.c' object='tools/nfctool/tools_nfctool_nfctool-llcp-decode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-llcp-decode.o `test -f 'tools/nfctool/llcp-decode.c' || echo '$(srcdir)/'`tools/nfctool/llcp-decode.c

tools/nfctool/tools_nfctool_nfctool-llcp-decode.obj: tools/nfctool/llcp-decode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-llcp-decode.obj -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-llcp-decode.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-llcp-decode.obj `if test -f 'tools/nfctool/llcp-decode.c'; then $(CYGPATH_W) 'tools/nfctool/llcp-decode.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/llcp-decode.c'; fi`
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-llcp-decode.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-llcp-decode.Po
#	$(AM_V_CC)source='tools/nfctool/llcp-decode.c' object='tools/nfctool/tools_nfctool_nfctool-llcp-decode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-llcp-decode.obj `if test -f 'tools/nfctool/llcp-decode.c'; then $(CYGPATH_W) 'tools/nfctool/llcp-decode.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/llcp-decode.c'; fi`

tools/nfctool/tools_nfctool_nfctool-snep-decode.o: tools/nfctool/snep-decode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-snep-decode.o -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-snep-decode.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-snep-decode.o `test -f 'tools/nfctool/snep-decode.c' || echo '$(srcdir)/'`tools/nfctool/snep-decode.c
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-snep-decode.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-snep-decode.Po
#	$(AM_V_CC)source='tools/nfctool/snep-decode.c' object='tools/nfctool/tools_nfctool_nfctool-snep-decode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-snep-decode.o `test -f 'tools/nfctool/snep-decode.c' || echo '$(srcdir)/'`tools/nfctool/snep-decode.c

tools/nfctool/tools_nfctool_nfctool-snep-decode.obj: tools/nfctool/snep-decode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-snep-decode.obj -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-snep-decode.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-snep-decode.obj `if test -f 'tools/nfctool/snep-decode.c'; then $(CYGPATH_W) 'tools/nfctool/snep-decode.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/snep-decode.c'; fi`
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-snep-decode.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-snep-decode.Po
#	$(AM_V_CC)source='tools/nfctool/snep-decode.c' object='tools/nfctool/tools_nfctool_nfctool-snep-decode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-snep-decode.obj `if test -f 'tools/nfctool/snep-decode.c'; then $(CYGPATH_W) 'tools/nfctool/snep-decode.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/snep-decode.c'; fi`

tools/nfctool/tools_nfctool_nfctool-ndef-decode.o: tools/nfctool/ndef-decode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-ndef-decode.o -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-ndef-decode.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-ndef-decode.o `test -f 'tools/nfctool/ndef-decode.c' || echo '$(srcdir)/'`tools/nfctool/ndef-decode.c
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-ndef-decode.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-ndef-decode.Po
#	$(AM_V_CC)source='tools/nfctool/ndef-decode.c' object='tools/nfctool/tools_nfctool_nfctool-ndef-decode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-ndef-decode.o `test -f 'tools/nfctool/ndef-decode.c' || echo '$(srcdir)/'`tools/nfctool/ndef-decode.c

tools/nfctool/tools_nfctool_nfctool-ndef-decode.obj: tools/nfctool/ndef-decode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-ndef-decode.obj -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-ndef-decode.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-ndef-decode.obj `if test -f 'tools/nfctool/ndef-decode.c'; then $(CYGPATH_W) 'tools/nfctool/ndef-decode.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/ndef-decode.c'; fi`
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-ndef-decode.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-ndef-decode.Po
#	$(AM_V_CC)source='tools/nfctool/ndef-decode.c' object='tools/nfctool/tools_nfctool_nfctool-ndef-decode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-ndef-decode.obj `if test -f 'tools/nfctool/ndef-decode.c'; then $(CYGPATH_W) 'tools/nfctool/ndef-decode.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/ndef-decode.c'; fi`

tools/nfctool/tools_nfctool_nfctool-display.o: tools/nfctool/display.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-display.o -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-display.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-display.o `test -f 'tools/nfctool/display.c' || echo '$(srcdir)/'`tools/nfctool/display.c
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-display.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-display.Po
#	$(AM_V_CC)source='tools/nfctool/display.c' object='tools/nfctool/tools_nfctool_nfctool-display.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-display.o `test -f 'tools/nfctool/display.c' || echo '$(srcdir)/'`tools/nfctool/display.c

tools/nfctool/tools_nfctool_nfctool-display.obj: tools/nfctool/display.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/nfctool/tools_nfctool_nfctool-display.obj -MD -MP -MF tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-display.Tpo -c -o tools/nfctool/tools_nfctool_nfctool-display.obj `if test -f 'tools/nfctool/display.c'; then $(CYGPATH_W) 'tools/nfctool/display.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/display.c'; fi`
	$(AM_V_at)$(am__mv) tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-display.Tpo tools/nfctool/$(DEPDIR)/tools_nfctool_nfctool-display.Po
#	$(AM_V_CC)source='tools/nfctool/display.c' object='tools/nfctool/tools_nfctool_nfctool-display.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_nfctool_nfctool_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/nfctool/tools_nfctool_nfctool-display.obj `if test -f 'tools/nfctool/display.c'; then $(CYGPATH_W) 'tools/nfctool/display.c'; else $(CYGPATH_W) '$(srcdir)/tools/nfctool/display.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf se/.libs se/_libs
	-rm -rf src/.libs src/_libs
	-rm -rf tools/.libs tools/_libs
	-rm -rf tools/nfctool/.libs tools/nfctool/_libs
	-rm -rf unit/.libs unit/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-man1: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-man5: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man5dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man5dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man5dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.5[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^5][0-9a-z]*$$,5,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man5dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man5dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man5dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man5dir)" || exit $$?; }; \
	done; }

uninstall-man5:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man5dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.5[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^5][0-9a-z]*$$,5,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man5dir)'; $(am__uninstall_files_from_dir)
install-man8: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man8dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man8dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man8dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.8[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man8dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man8dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man8dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man8dir)" || exit $$?; }; \
	done; }

uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man8dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.8[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man8dir)'; $(am__uninstall_files_from_dir)
install-dist_dbusDATA: $(dist_dbus_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_dbus_DATA)'; test -n "$(dbusdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dbusdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dbusdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dbusdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dbusdir)" || exit $$?; \
	done

uninstall-dist_dbusDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dbus_DATA)'; test -n "$(dbusdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dbusdir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-systemdsystemunitDATA: $(systemdsystemunit_DATA)
	@$(NORMAL_INSTALL)
	@list='$(systemdsystemunit_DATA)'; test -n "$(systemdsystemunitdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(systemdsystemunitdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(systemdsystemunitdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(systemdsystemunitdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(systemdsystemunitdir)" || exit $$?; \
	done

uninstall-systemdsystemunitDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(systemdsystemunit_DATA)'; test -n "$(systemdsystemunitdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(systemdsystemunitdir)'; $(am__uninstall_files_from_dir)
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
unit/test-ndef-parse.log: unit/test-ndef-parse$(EXEEXT)
	@p='unit/test-ndef-parse$(EXEEXT)'; \
	b='unit/test-ndef-parse'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-ndef-build.log: unit/test-ndef-build$(EXEEXT)
	@p='unit/test-ndef-build$(EXEEXT)'; \
	b='unit/test-ndef-build'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit/test-snep-read.log: unit/test-snep-read$(EXEEXT)
	@p='unit/test-snep-read$(EXEEXT)'; \
	b='unit/test-snep-read'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) $(MANS) $(DATA) \
		$(HEADERS) config.h
installdirs:
	for dir in "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(se_plugindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkglibexecdir)" "$(DESTDIR)$(testdir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man5dir)" "$(DESTDIR)$(man8dir)" "$(DESTDIR)$(dbusdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(systemdsystemunitdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f gdbus/$(DEPDIR)/$(am__dirstamp)
	-rm -f gdbus/$(am__dirstamp)
	-rm -f plugins/$(DEPDIR)/$(am__dirstamp)
	-rm -f plugins/$(am__dirstamp)
	-rm -f se/$(DEPDIR)/$(am__dirstamp)
	-rm -f se/$(am__dirstamp)
	-rm -f se/plugins/$(DEPDIR)/$(am__dirstamp)
	-rm -f se/plugins/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f tools/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/$(am__dirstamp)
	-rm -f tools/nfctool/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/nfctool/$(am__dirstamp)
	-rm -f unit/$(DEPDIR)/$(am__dirstamp)
	-rm -f unit/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local clean-noinstPROGRAMS \
	clean-pkglibexecPROGRAMS clean-pluginLTLIBRARIES \
	clean-se_pluginLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf gdbus/$(DEPDIR) plugins/$(DEPDIR) se/$(DEPDIR) se/plugins/$(DEPDIR) src/$(DEPDIR) tools/$(DEPDIR) tools/nfctool/$(DEPDIR) unit/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_dbusDATA install-man \
	install-nodist_includeHEADERS install-pkgconfigDATA \
	install-pkgincludeHEADERS install-pluginLTLIBRARIES \
	install-se_pluginLTLIBRARIES install-systemdsystemunitDATA \
	install-testSCRIPTS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-pkglibexecPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1 install-man5 install-man8

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf gdbus/$(DEPDIR) plugins/$(DEPDIR) se/$(DEPDIR) se/plugins/$(DEPDIR) src/$(DEPDIR) tools/$(DEPDIR) tools/nfctool/$(DEPDIR) unit/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_dbusDATA \
	uninstall-man uninstall-nodist_includeHEADERS \
	uninstall-pkgconfigDATA uninstall-pkgincludeHEADERS \
	uninstall-pkglibexecPROGRAMS uninstall-pluginLTLIBRARIES \
	uninstall-se_pluginLTLIBRARIES uninstall-systemdsystemunitDATA \
	uninstall-testSCRIPTS

uninstall-man: uninstall-man1 uninstall-man5 uninstall-man8

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-cscope clean-generic clean-libtool clean-local \
	clean-noinstPROGRAMS clean-pkglibexecPROGRAMS \
	clean-pluginLTLIBRARIES clean-se_pluginLTLIBRARIES cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_dbusDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-man1 install-man5 install-man8 \
	install-nodist_includeHEADERS install-pdf install-pdf-am \
	install-pkgconfigDATA install-pkgincludeHEADERS \
	install-pkglibexecPROGRAMS install-pluginLTLIBRARIES \
	install-ps install-ps-am install-se_pluginLTLIBRARIES \
	install-strip install-systemdsystemunitDATA \
	install-testSCRIPTS installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-dist_dbusDATA \
	uninstall-man uninstall-man1 uninstall-man5 uninstall-man8 \
	uninstall-nodist_includeHEADERS uninstall-pkgconfigDATA \
	uninstall-pkgincludeHEADERS uninstall-pkglibexecPROGRAMS \
	uninstall-pluginLTLIBRARIES uninstall-se_pluginLTLIBRARIES \
	uninstall-systemdsystemunitDATA uninstall-testSCRIPTS


%.service: %.service.in Makefile
	$(SED_PROCESS)

src/plugin.$(OBJEXT): src/builtin.h

src/builtin.h: src/genbuiltin $(builtin_sources)
	$(AM_V_GEN)$(srcdir)/src/genbuiltin $(builtin_modules) > $@

se/plugin.$(OBJEXT): se/builtin.h

se/builtin.h: src/genbuiltin $(builtin_se_sources)
	$(AM_V_GEN)$(srcdir)/src/genbuiltin $(builtin_se_modules) > $@

$(src_neard_OBJECTS) \
$(tools_nfctool_nfctool_OBJECTS) \
$(plugin_objects) \
$(se_seeld_OBJECTS) \
$(unit_test_ndef_parse_OBJECTS) \
$(unit_test_ndef_build_OBJECTS) \
$(unit_test_snep-read_OBJECTS) \
$(tools_snep_send_OBJECTS): $(local_headers)

include/near/version.h: include/version.h
	$(AM_V_at)$(MKDIR_P) include/near
	$(AM_V_GEN)$(LN_S) $(abs_top_builddir)/$< $@

include/near/%.h: $(abs_top_srcdir)/include/%.h
	$(AM_V_at)$(MKDIR_P) include/near
	$(AM_V_GEN)$(LN_S) $< $@

clean-local:
	@$(RM) -rf include/near

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
